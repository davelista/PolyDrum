{"version":3,"sources":["hooks/useSelectedRhythm.js","hooks/useSteps.js","hooks/useIndices.js","context/AppContext.js","components/StepButton/StepButton.js","components/Slider/HorizontalSlider.js","components/Dropdown/Dropdown.js","components/NumberControl/NumberControl.js","components/NumberControl/WetControl.js","components/PagesSections/RhythmSection/Drumpad/Drumpad.js","components/Button/Button.js","components/Slider/VerticalSlider.js","assets/logo.png","components/PagesSections/SettingsSection/SlidersContainer.js","components/Popup/EffectPopup.js","components/PagesSections/SettingsSection/CalculateBpm.js","components/PagesSections/SettingsSection/SettingsSection.js","components/PagesSections/RhythmSection/PatternSections.js","components/PagesSections/RhythmSection/RhythmSection.js","components/PagesSections/RhythmSection/Drumpad/StepButtonsList.js","components/PagesSections/SettingsSection/ButtonsList.js","components/PlayRhythm/PlayRhythm.js","components/Popup/Popup.js","components/PagesSections/RhythmSection/Display/FinalInstrumentsRhythm.js","hooks/useMediaQuery.js","components/PagesSections/RhythmSection/Display/Display.js","components/Popup/InstructionPopup.js","components/Popup/DetailsPopup.js","components/CustomInstrument/CustomInstrument.js","view/Drumbit.js","App.js","reportWebVitals.js","index.js","components/PagesSections/SettingsSection/SettingsSection.module.css","components/PagesSections/RhythmSection/Display/Display.module.css","components/Popup/Popup.module.css","components/PagesSections/RhythmSection/Drumpad/Drumpad.module.css","components/Dropdown/Dropdown.module.css","components/PagesSections/RhythmSection/RhythmSection.module.css","components/Slider/Sliders.module.css","components/StepButton/StepButton.module.css","view/Drumbit.module.css"],"names":["useSelectedRhythm","idRhythm","db","setDb","useState","selectedRhythm","setSelectedRhythm","useEffect","undefined","initRhythmObj","setRhythmObj","temp","timeSignature","numStepButtons","effect","wet","instruments","useSteps","item","length","noteDict","steps","setSteps","updateSteps","map","x","i","column","j","pad","push","useIndices","appData","useContext","AppContext","indices","setIndices","userRhythms","data","updateIndices","value","array","numerator","denominator","math","lcm","findNumIndices","React","createContext","useAppContext","bpm","setBpm","isPlay","setPlay","volume","setVolume","mute","setMute","setIdRhythm","setTimeSignature","numRhythm","setNumRhythm","setNumStepButton","currentIndex","setCurrentIndex","load","setLoad","setEffect","itemSelectedRhythm","setItemSelectedRhythm","a","b","hcf","updateUserRhythms","newNumStepButton","newTimeSignature","newDenominator","produce","draft","samplesList","itemInstrument","name","id","y","updatePad","updateEffect","newEffect","updateWet","newWet","insertPattern","pattern","patternsPreset","rhythm","console","log","patternList","useMemo","popupsList","timeSignaturesList","effectList","wetList","play","setValue","index","setIndex","stepButtons","number","setNumber","setItem","rhythmsList","setData","update","tempo","StepButton","props","idInstrument","active","children","setNotes","onMouseDown","onMouseUp","className","styles","container","onClick","useStyles","makeStyles","theme","root","width","spacing","textAlign","margin","height","line","display","flexDirection","alignItems","icon","marginRight","cursor","HorizontalSlider","withStyles","color","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","valueLabel","left","track","borderRadius","rail","Slider","title","defaultValue","volumeValue","onChangeValue","onChangeMute","classes","onChangeVolumeValue","changeVolume","Grid","type","min","max","slider","onChange","e","target","dropdownStyles","contentStyles","Dropdown","open","setOpen","listInRhythm","jsonList","dropdownStyle","contentStyle","checkDropdownStyle","includes","checkContentStyle","activeDrop","button","dropLabel","CustomTextField","padding","borderBottomColor","borderColor","TextField","NumberControl","label","noValidate","autoComplete","variant","InputLabelProps","shrink","inputProps","style","playItem","indexNoteDict","Drumpad","notes","setIndexNoteDict","Object","keys","setNoteDict","setSounds","arrow","stepButton","instrument","samples","onLoad","buffers","STYLES","Button","buttonStyle","buttonSize","buttonColor","checkButtonStyle","justifyContent","CustomSlider","borderBottom","vertical","marginBottom","valuetext","VerticalSlider","Typography","gutterBottom","orientation","getAriaValueText","SlidersContainer","slidersContainer","section","filter","vs","backgroundImage","logo","backgroundSize","backgroundPosition","backgroundRepeat","EffectPopup","CalculateBpm","count","setCount","timeFirst","setTimeFirst","timePrevious","setTimePrevious","handleMouseDown","time","Date","getTime","Math","round","onKeyDown","text","SettingsSection","open2","setOpen2","open3","setOpen3","flexWrap","auxButtons","size","divider","body","onChangeOpen","PatternSections","list","rhythms","patterns","RhythmSection","drumpad","StepButtonsList","ButtonsList","playButtons","rhythmButtonsSection","rhythmButtonsControls","concat","splice","rhythmButtonsList","overflowY","overflow","PlayRhythm","sample","setSample","newVolume","isPlaying","isMuted","Popup","overlay","closeSection","closeButton","titleContainer","FinalInstrumentsRhythm","minute","seconds","interval","setInterval","clearInterval","drawFinalRhythm","pads","padIndex","controlPad","draw","box","allDisplayBox","toggleActive","toggle","columnTitles","tab","columnSteps","background","query","breakpoint","Device","Display","isPc","match","setMatch","useLayoutEffect","window","matchMedia","matches","mq","listener","addEventListener","removeEventListener","useMediaQuery","InstructionPopup","DetailsPopup","CustomInstrument","memo","Drumbit","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bd6b827b.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\n\nconst useSelectedRhythm = (idRhythm, db, setDb) => {\n    const [selectedRhythm, setSelectedRhythm] = useState({})\n\n    useEffect(() => {\n        if(db[idRhythm] === undefined && idRhythm !== null){\n            initRhythmObj();\n        } else {\n            setRhythmObj();\n        }\n    }, [idRhythm, db]);\n\n    const initRhythmObj = () => { /*Crea un oggetto vuoto e lo inserisce*/\n        let temp = [...db];\n        let item = {\n            timeSignature : \"\",\n            numStepButtons: 0,\n            effect: \"\",\n            wet: 0.0,\n            instruments: []\n        }\n        temp[idRhythm] = item;\n        setDb(temp);\n        setSelectedRhythm(db[idRhythm])\n    }\n\n    const setRhythmObj = () => { /*seleziona l'oggetto nell'array di JSON*/\n        if(idRhythm !== null) {\n            setSelectedRhythm(db[idRhythm])\n        } else {\n            setSelectedRhythm(db);\n\n        }\n    }\n    return [selectedRhythm, setSelectedRhythm];\n}\n\nexport default useSelectedRhythm;","import {useEffect, useState} from 'react';\n\nconst useSteps = (item, length, noteDict) => {\n    const [steps, setSteps] = useState([])\n\n\n    useEffect(() => {\n        /*if(item !== undefined && item.instruments !== undefined) {\n            updateSteps();\n        }*/\n        updateSteps()\n    }, [item, length, noteDict]);\n\n    const updateSteps = () => { /* crea steps per poter settare singolarmente tutti i volumi*/\n        let temp = [];\n        item.instruments.map((x, i) =>{\n            let column = []\n            for (let j = 0; j < length; j++){\n                if(x.pad[j]){\n                    column.push(noteDict[i]);\n                } else {\n                    column.push([]);\n                }\n            }\n            temp.push(column)\n        })\n        /*console.log(\"\\n\\nTEMP DI MERDA È: \",temp)*/\n        setSteps(temp);\n    }\n\n    return [steps, setSteps];\n}\n\nexport default useSteps;","import {useContext, useEffect, useState} from 'react';\nimport {AppContext} from \"../context/AppContext\";\n\nconst useIndices = () => {\n    const appData = useContext(AppContext);\n    const [indices, setIndices] = useState([]);\n\n    useEffect(() => {\n        if(appData.userRhythms.data !== undefined){\n            updateIndices()\n        }\n    }, [appData.timeSignature.value, appData.userRhythms.data])\n\n    const findNumIndices = () => {\n        let numerator = 1;\n        let denominator = 1;\n        for(let i = 0; i < appData.userRhythms.data.length; i++){\n            if(appData.userRhythms.data[i].timeSignature !== \"\" && appData.userRhythms.data[i].timeSignature !== undefined){\n                numerator = appData.math.lcm(numerator, appData.userRhythms.data[i].numStepButtons);\n                denominator = appData.math.lcm(denominator, appData.userRhythms.data[i].denominator);\n            }\n        }\n        return numerator;\n    }\n\n    const updateIndices = () => {\n\n        let array = [];\n        let numerator = findNumIndices();\n\n        if(numerator !== 1){\n            for (let i = 1; i <= numerator; i++){\n                array.push(i);\n            }\n        }\n        setIndices(array);\n    }\n    return [indices, setIndices]\n\n\n}\n\nexport default useIndices;","import React, {useMemo, useState} from \"react\";\nimport timeSignaturesList from '../timeSignaturesList.json';\nimport samplesList from '../samplesList.json';\nimport noteDict from '../noteDict.json';\nimport popupsList from '../popupsList.json';\nimport effectList from '../effectList.json';\nimport wetList from '../wetList.json';\nimport patternList from '../patternList.json'\nimport patternsPreset from '../patternsPreset.json'\nimport {useSelectedRhythm} from \"../hooks\";\nimport produce from \"immer\";\n\nexport const AppContext = React.createContext({});\n\nexport function useAppContext() {\n    /*Settings*/\n    const [bpm, setBpm] = useState(90);\n\n    const [isPlay, setPlay] = useState(false);\n    const [volume, setVolume] = useState(50);\n    const [mute, setMute] = useState(false);\n    const [idRhythm, setIdRhythm] = useState(0);\n    const [timeSignature, setTimeSignature] = useState('');\n    const [numRhythm, setNumRhythm] = useState([0]);\n    const [numStepButtons, setNumStepButton] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [load, setLoad] = useState(false);\n    const [effect, setEffect] = useState(null);\n\n\n    /*JSON*/\n    const [db, setDb] = useState([{\n        timeSignature : \"\",\n        numStepButtons: 0,\n        effect: \"\",\n        wet: 0.0,\n        instruments: []\n    }]);/*Salva le informazioni di un ritmo*/\n\n    const [itemSelectedRhythm, setItemSelectedRhythm] = useSelectedRhythm(idRhythm, db, setDb);\n\n    const lcm = (a, b) => {\n        // looping from 1 to number1 and number2 to find HCF\n        let hcf;\n        for (let i = 1; i <= a && i <= b; i++) {\n            // check if is factor of both integers\n            if( a % i === 0 && b % i === 0) {\n                hcf = i;\n            }\n        }\n        // find LCM\n        return (a * b) / hcf\n    }\n\n    const updatePad = (temp, idRhythm) => {\n\n        samplesList.map((x) => {\n            let pad = [];\n            let itemInstrument = {\n                name: x.name,\n                pad: [],\n                volume: 50\n            };\n            if(temp[idRhythm].instruments.length === x.id){ /* se non sono stati inseriti tutti gli strumenti */\n                temp[idRhythm].instruments.push(itemInstrument) /* Aggiunge l'elemento all'array */\n            } else { /* ALTRIMENTI */\n                temp[idRhythm].instruments.map((y, i) => { /* Sostituisce il numero di stepButton all'interno di pad se l'utente cambia il ritmo */\n                    if(y.pad.length !== pad.length) {\n                        y.pad = pad;\n                    }\n                })\n            }\n        })\n    }\n\n    const updateUserRhythms = (newNumStepButton, newTimeSignature, newDenominator) => {\n\n        setNumStepButton(newNumStepButton);\n        setTimeSignature(newTimeSignature);\n\n            setDb(produce(db, draft => {\n                draft[idRhythm].timeSignature = newTimeSignature;\n                draft[idRhythm].numStepButtons = newNumStepButton;\n                draft[idRhythm].denominator = newDenominator;\n                updatePad(draft, idRhythm);\n            }))\n        }\n\n    const updateEffect = (newEffect) => {\n\n        setEffect(newEffect);\n\n        setDb(produce(db, draft => {\n            draft[idRhythm].effect = newEffect;\n\n        }))\n    }\n\n    const updateWet = (newWet) => {\n\n        setDb(produce(db, draft => {\n            draft[idRhythm].wet = newWet;\n\n        }))\n    }\n\n    const insertPattern = (pattern, i) => {\n        if (db[idRhythm] !== undefined){\n            setDb(produce(db, draft => {\n                draft[idRhythm] = patternsPreset[i].rhythm;\n\n            }))\n            console.log(patternList[i])\n        }\n    }\n\n\n\n\n    return useMemo(\n        () => ({\n\n            popupsList,\n            timeSignaturesList,\n            samplesList,\n            noteDict,\n            effectList,\n            wetList,\n            patternList,\n            patternsPreset,\n\n            math:{\n                lcm: lcm,\n            },\n            play:{\n                value: isPlay,\n                setValue: setPlay,\n                index: currentIndex,\n                setIndex: setCurrentIndex,\n                load: load,\n                setLoad: setLoad\n            },\n            stepButtons:{\n                value: numStepButtons,\n                setValue: setNumStepButton\n            },\n            selectedRhythm: { /*Ritmo selezionato dall'utente*/\n                number: idRhythm, /*id del ritmo scelto dall'utente*/\n                setNumber: setIdRhythm, /*set id del ritmo scelto dall'utente*/\n                item: itemSelectedRhythm, /*oggetto json del ritmo scelto dall'utente*/\n                setItem:  setItemSelectedRhythm /*set oggetto json del ritmo scelto dall'utente*/\n            },\n            rhythmsList: { /*Lista di ritmi per i bottoni*/\n                item: numRhythm,\n                setItem: setNumRhythm\n            },\n            userRhythms: { /*Array di JSON con tutti i ritmi dell'utente*/\n                data: db,\n                setData: setDb,\n                update: updateUserRhythms,\n                updateEffect: updateEffect,\n                updateWet: updateWet,\n                insertPattern: insertPattern\n\n            },\n            timeSignature: { /*tempo della battuta */\n                value: timeSignature,\n                setValue: setTimeSignature\n            },\n            tempo: {\n                value: bpm,\n                setValue: setBpm\n            },\n            volume: {\n                value: volume,\n                setValue: setVolume,\n            },\n            mute: {\n                value: mute,\n                setValue: setMute\n            },\n\n\n            effect: {\n                value: effect,\n                setEffect: setEffect\n            }\n        }),\n        [bpm, setBpm, isPlay, volume, mute, timeSignature,\n            numStepButtons, numRhythm, idRhythm, itemSelectedRhythm, currentIndex,\n            load, effect]\n    );\n}","import React, {useContext} from 'react';\nimport styles from './StepButton.module.css'\nimport produce from \"immer\"\nimport {Instrument, Song, Track} from \"reactronica\";\nimport {AppContext} from \"../../context/AppContext\";\n\nconst StepButton = (props) => {\n    const appData = useContext(AppContext);\n    const {id, idInstrument, idRhythm, userRhythms, active} = props;\n    const {children} = props\n    const noteDict = [\"A1\", \"A#1\", \"B1\", \"C1\", \"C#1\", \"D1\", \"D#1\", \"E1\"]\n    const [notes, setNotes] = React.useState(null);\n    return (\n        <>\n            <div\n                onMouseDown={() => { //se lo si attiva al click del mouse allora suona la nota, altrimenti no\n                    if(!active){\n                        setNotes([{name: noteDict[idInstrument]}])\n                    }\n                }}\n                onMouseUp={() => {\n                    if(!active) {\n                        setNotes(null)\n                    }\n                }}\n                className={active ? styles.active : styles.container}\n                 onClick={() => {userRhythms.setData(produce(userRhythms.data, draft => { /*Cambia lo stato dello stepButton all'interno del JSON*/\n                     draft[idRhythm].instruments[idInstrument].pad[id] = !active;\n                 }))}}>\n                {children}\n\n\n            </div>\n            {/*<Song>\n                <Track>\n                    <Instrument\n                        type=\"sampler\"\n                        notes={notes}\n                        samples={appData.noteDict[0]}\n                        onLoad={(buffers) => {\n                            // Runs when all samples are loaded\n                        }}\n                    />\n                </Track>\n            </Song>\n            */}\n        </>\n    );\n}\n\nexport default StepButton;","import React, {useEffect, useState} from 'react';\nimport {makeStyles, Slider, Typography, withStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport styles from \"./Sliders.module.css\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300 + theme.spacing(3) * 2,\n        textAlign: \"center\"\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n    line: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\"\n    },\n    icon: {\n        marginRight: \"1rem\",\n        \"&:hover\":{\n            cursor: \"pointer\",\n        }\n    }\n}));\n\nconst RoundSlider = withStyles({\n    root: {\n        color: 'darkred',\n        height: 8,\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    thumb: {\n        height: 24,\n        width: 24,\n        backgroundColor: 'white',\n        border: '3px solid currentColor',\n        marginTop: -8,\n        marginLeft: -12,\n        '&:focus, &:hover, &$active': {\n            boxShadow: 'inherit',\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 4px)',\n    },\n    track: {\n        height: 8,\n        borderRadius: 4,\n        color: \"white\"\n    },\n    rail: {\n        height: 8,\n        borderRadius: 4,\n        color: \"black\"\n    },\n})(Slider);\n\nconst changeVolume = (mute, onChangeVolumeValue, defaultValue) => {\n    if(mute){\n        onChangeVolumeValue(0);\n    } else {\n        onChangeVolumeValue(defaultValue)\n    }\n}\n\nconst HorizontalSlider = (props) => {\n    const {title, defaultValue, volumeValue, onChangeValue, icon, mute, onChangeMute} = props;\n    const classes = useStyles();\n\n    useEffect(() => {\n        changeVolume(mute, onChangeValue, defaultValue)\n    }, [mute]);\n\n    const handleOnChange = (e) =>{\n        onChangeValue(e.target.value)\n    }\n    return (\n        <>\n\n                <div className={styles.container}>\n                    <div className={classes.icon}> {/* icon of volume */}\n                        <Grid item>\n                            <div onClick={() => {\n                                onChangeMute(!mute);\n                            }}>{icon}</div>\n                        </Grid>\n                    </div>\n                    <input  type=\"range\" min={0} max={100} value={volumeValue}\n                            className={styles.slider}\n                            onChange={handleOnChange}\n                    />\n                    <div className={styles.value}>\n                        {volumeValue}\n                    </div>\n                </div>\n        </>\n    );\n}\n\nexport default HorizontalSlider;\n\n","import React, {useContext, useState} from 'react';\nimport styles from \"./Dropdown.module.css\";\n//per modifcare le diverse tipologie di dropdown (primary = time signature and effects | secondary = wet)\nimport \"./DiffertDropdown.css\";\nimport {RiArrowDownSLine} from \"react-icons/all\";\nimport {AppContext} from \"../../context/AppContext\";\n\nconst dropdownStyles = ['dropdown--primary', 'dropdown--secondary'];\nconst contentStyles = ['content--primary','content--secondary'];\n\nconst Dropdown = (props) => {\n    const appData = useContext(AppContext);\n    const [open, setOpen] = useState(false);\n    const {name, listInRhythm, jsonList, type, dropdownStyle, contentStyle} = props;\n\n    const checkDropdownStyle = dropdownStyles.includes(dropdownStyle) ? dropdownStyle : dropdownStyles[0];\n    const checkContentStyle = contentStyles.includes(contentStyle) ? contentStyle : contentStyles[0];\n    return (\n        <>\n\n            {appData.userRhythms.data[appData.selectedRhythm.number] !== undefined && (\n                <div className={`${checkDropdownStyle}`}>\n                    <div className={open ? styles.activeDrop : styles.button} onClick={() => {setOpen(!open)}}>\n                        {listInRhythm === \"\" || listInRhythm === 0 ?\n                            <> <div className={styles.dropLabel}>{name}</div> <RiArrowDownSLine/></> :\n                            <>{type === \"wet\" ? listInRhythm*100 : listInRhythm} <RiArrowDownSLine/> </>}\n                        {/* VECCHIO\n                        appData.userRhythms.data[appData.selectedRhythm.number].timeSignature === \"\" ?\n                            <> <div className={styles.dropLabel}>{name}</div> <RiArrowDownSLine/></> :\n                            <>{appData.userRhythms.data[appData.selectedRhythm.number].timeSignature} <RiArrowDownSLine/> </>*/}\n\n                    </div>\n\n                    {open ? (\n                        <div className={`${checkContentStyle}`}>\n                            {jsonList.map((x) => {\n                                if(type === \"time\"){\n                                    return <div className={styles.item} onClick={() => {\n                                        appData.userRhythms.update(x.numerator, x.value, x.denominator, null);\n                                        setOpen(false)\n                                    }} key={x.value}>{x.value}</div>\n                                } else if(type === \"effect\"){\n                                    return <div className={styles.item} onClick={() => {\n                                        appData.userRhythms.updateEffect(x.value);\n                                        setOpen(false)\n                                    }} key={x.value}>{x.value}</div>\n                                } else {\n                                    return <div className={styles.item} onClick={() => {\n                                        appData.userRhythms.updateWet(x.value);\n                                        setOpen(false)\n                                    }} key={x.value}>{x.name}</div>\n                                }\n                            })}\n                            {/* VECCHIO\n                            appData.timeSignaturesList.map((x) => {\n                                return <div className={styles.item} onClick={() => {\n                                    appData.userRhythms.update(x.numerator, x.value, x.denominator);\n                                    setOpen(false)\n                                }} key={x.value}>{x.value}</div>\n\n                            })*/}\n                        </div>\n                    ) : null}\n\n            </div>)}\n\n        </>\n    );\n}\nexport default Dropdown;","import React from 'react';\nimport {makeStyles, TextField, withStyles} from \"@material-ui/core\";\n\nconst CustomTextField = withStyles({\n    root: {\n        color: \"white\",\n        width: \"5.5rem\",\n        height: \"3rem\",\n        textAlign: \"center\",\n        \"& label.Mui-focused\": {\n            color: \"white\",\n        },\n        \"& .MuiOutlinedInput-input\": {\n            padding: \"1.2rem\",\n        },\n        \"& .MuiInput-underline:after\": {\n            border: \"2px solid\",\n            borderBottomColor: \"blue\",\n            color: \"blue\"\n        },\n        \"& .MuiOutlinedInput-root\": {\n            borderRadius: \"0.5rem\",\n            width: \"100%\",\n            color: \"white\",\n            textAlign: \"center\",\n            boxShadow: \"1px 2px 2px 1px rgba(0, 0, 0, 0.6)\",\n            \"&.Mui-focused fieldset\": {\n                borderColor: \"darkred\",\n            },\n        },\n        \"& .MuiInputLabel-outlined\":{\n            color:\"white\",\n            borderColor:\"white\"\n        },\n        /* dropdown icon */\n        \"& .MuiSelect-icon\": {\n            color: \"yellow\"\n        },\n        /* color of the border */\n        \"& .MuiOutlinedInput-notchedOutline\":{\n            borderColor: \"white\"\n        }\n    },\n})(TextField);\n\nconst NumberControl = (props) => {\n    const {tempo, label} = props\n    return (\n        <>\n            <form  noValidate autoComplete=\"off\">\n\n                <CustomTextField\n                    id=\"outlined-number\"\n                    label= {label}\n                    type=\"number\"\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    InputLabelProps={{\n                        shrink: true,\n\n                    }}\n                    inputProps={{min: 1, style: {textAlign: 'center'}}}\n                    value={tempo.value}\n                    onChange={(e) => tempo.setValue(e.target.value)}/*NON CAMBIARE*/\n\n                />\n\n            </form>\n        </>\n    );\n}\n\nexport default NumberControl;","import React, {useState} from 'react';\nimport {makeStyles, TextField, withStyles} from \"@material-ui/core\";\n\nconst CustomTextField = withStyles({\n    root: {\n        color: \"white\",\n        width: \"5.5rem\",\n        height: \"3rem\",\n        textAlign: \"center\",\n        \"& label.Mui-focused\": {\n            color: \"white\",\n        },\n        \"& .MuiOutlinedInput-input\": {\n            padding: \"1.2rem\",\n        },\n        \"& .MuiInput-underline:after\": {\n            border: \"2px solid\",\n            borderBottomColor: \"blue\",\n            color: \"blue\"\n        },\n        \"& .MuiOutlinedInput-root\": {\n            borderRadius: \"0.5rem\",\n            width: \"100%\",\n            color: \"white\",\n            textAlign: \"center\",\n            boxShadow: \"1px 2px 2px 1px rgba(0, 0, 0, 0.6)\",\n            \"&.Mui-focused fieldset\": {\n                borderColor: \"darkred\",\n            },\n        },\n        \"& .MuiInputLabel-outlined\":{\n            color:\"white\",\n            borderColor:\"white\"\n        },\n        /* dropdown icon */\n        \"& .MuiSelect-icon\": {\n            color: \"yellow\"\n        },\n        /* color of the border */\n        \"& .MuiOutlinedInput-notchedOutline\":{\n            borderColor: \"white\"\n        }\n    },\n})(TextField);\n\nconst WetControl = (props) => {\n    const {wet, label, rhythm} = props\n    const [state, setState] = useState(wet)\n    return (\n        <>\n            <form  noValidate autoComplete=\"off\">\n\n                <CustomTextField\n                    id=\"outlined-number\"\n                    label= {label}\n                    type=\"number\"\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    InputLabelProps={{\n                        shrink: true,\n\n                    }}\n                    inputProps={{min: 1, max: 100, step:10, style: {textAlign: 'center'}}}\n\n                    defaultValue={wet * 100}/*NON CAMBIARE*/\n                    onChange={(e) => rhythm.updateWet(Math.round(e.target.value/100))}/*NON CAMBIARE*/\n\n                />\n\n            </form>\n        </>\n    );\n}\n\nexport default WetControl;","import React, {useContext, useEffect, useState} from 'react';\nimport styles from './Drumpad.module.css';\nimport {PlayRhythm, StepButtonsList} from \"../../../index\";\nimport {AppContext} from \"../../../../context/AppContext\";\nimport {Instrument, Song, Track} from \"reactronica\";\nimport {IoIosArrowBack, IoIosArrowForward} from \"react-icons/all\";\nimport app from \"../../../../App\";\n\nconst playItem = (item, appData, indexNoteDict) => {\n    if (item !== undefined &&\n        item.instruments !== undefined\n        && item.instruments.length === 8) {\n        return (<PlayRhythm play={appData.play}\n                            tempo={appData.tempo.value}\n                            volume={appData.volume.value}\n                            mute={appData.mute.value}\n                            noteDict={appData.noteDict}\n                            indexNoteDict={indexNoteDict}\n                            numStepButtons={item.numStepButtons}\n                            item={item}\n\n        />)\n    }\n}\n\nconst Drumpad = (props) => {\n    const appData = useContext(AppContext);\n    /*const noteDict = [\"A1\", \"A#1\", \"B1\", \"C1\", \"C#1\", \"D1\", \"D#1\", \"E1\"]*/\n    const [notes, setNotes] = useState(null);\n    const [indexNoteDict, setIndexNoteDict] = useState(0);\n    const [noteDict, setNoteDict] = useState(Object.keys(appData.noteDict[0]))\n\n    useEffect(() => {\n        setNoteDict(Object.keys(appData.noteDict[indexNoteDict]));\n    }, [indexNoteDict])\n\n    return (\n        <>\n            <div className={styles.container}>\n\n                <div className={styles.setSounds}>Set of sounds:\n                    {indexNoteDict > 0 ? <div className={styles.arrow}><IoIosArrowBack onClick={() => {\n                        setIndexNoteDict(indexNoteDict - 1);\n                    }}/></div> : null} { indexNoteDict + 1 }\n                    {\n                        indexNoteDict < appData.noteDict.length - 1  ?  <div className={styles.arrow}><IoIosArrowForward onClick={() => {\n                            setIndexNoteDict(indexNoteDict + 1);\n                        }}/></div> : null}\n\n                </div>\n\n                {appData.selectedRhythm.number !== null ? playItem(appData.selectedRhythm.item, appData, indexNoteDict) :\n                    appData.selectedRhythm.item.length === appData.rhythmsList.item.length ?\n                        appData.selectedRhythm.item.map((x, i) => {\n                            return playItem(x, appData, indexNoteDict)\n                        }) : null\n                }\n\n                {appData.samplesList.map((x) => {\n                    return <>\n                        <div className={styles.line}>\n                            <div\n                                /*To play sound when you click note*/\n                                onMouseDown={() => {\n                                    setNotes([{name: noteDict[x.id]}])\n                                }}\n                                onMouseUp={() => {\n                                        setNotes(null)\n                                }}\n\n                                /*css*/\n                                className={styles.title}>\n                                {x.name}\n                            </div>\n                            <div className={styles.stepButton}>\n                                {appData.selectedRhythm.item !== undefined ?\n                                    <StepButtonsList key={x.id}\n                                                     idInstrument={x.id}\n                                                     instrument={x.name}\n                                                     idRhythm={appData.selectedRhythm.number}\n                                    /> : null}\n                            </div>\n                        </div>\n                    </>\n\n                })}\n\n            </div>\n            <Song>\n                <Track>\n                    <Instrument\n                        type=\"sampler\"\n                        notes={notes}\n                        samples={appData.noteDict[indexNoteDict]}\n                        onLoad={(buffers) => {\n                            // Runs when all samples are loaded\n                        }}\n                    />\n                </Track>\n            </Song>\n\n        </>\n\n\n    );\n}\n\nexport default Drumpad;","import React from \"react\";\nimport \"./Button.css\";\n\nconst STYLES = ['btn--primary', 'btn--secondary', 'btn--primary--active', 'btn--secondary--active', 'btn--patterns'];\n\nconst Button = ({ children, type, onClick, buttonStyle, buttonSize, buttonColor, ...props }) => {\n    //Se è stato definito uno stile del bottone inserisci lo stile altrimenti consideri il primo nell'array (btn primary)\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n\n    //Creo un botton con le proprietà di stile, la proprietà di onClick e type. Children è il testo del bottone\n    return (\n        <button className={`btn ${checkButtonStyle}`} onClick={onClick} type={type} {...props}>\n            {children}\n        </button>\n    );\n};\n\nexport default Button;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport {withStyles} from \"@material-ui/core\";\nimport produce from \"immer\";\n\nconst useStyles = makeStyles({ /*come avere un file VerticalSlider.module.css*/\n    root: {\n        width: \"20%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderColor: \"white\",\n        border: 2,\n        marginTop: \"0rem\"\n    },\n    title: {\n        marginTop: \"0.5rem\",\n        textAlign: \"center\"\n    }\n});\n\nconst CustomSlider = withStyles({\nroot: {\n    color: 'darkred',\n        height: 8,\n        '&$vertical': {\n        width: 8\n    }\n},\nthumb: {\n    height: 20,\n        width: 20,\n        backgroundColor: '#fff',\n        border: '3px solid currentColor',\n        marginTop: -8,\n        marginLeft: -12,\n        '&:focus, &:hover': {\n        boxShadow: '0px 0px 0px 5px rgba(220, 220, 220, 0.16)'\n    },\n    '&$active': {\n        boxShadow: '0px 0px 0px 8px rgba(220, 220, 220, 0.16)'\n    }\n},\nactive: {},\nvalueLabel: {\n    left: 'calc(-50% + 4px)',\n},\ntrack: {\n    height: 8,\n        borderRadius: 4,\n        border: \"2px inset\",\n        borderColor: \"darkred\",\n        borderBottom: \"0\",\n        color: \"black\"\n},\nrail: {\n    height: 8,\n        borderRadius: 4,\n        border: \"2px inset\",\n        borderColor: \"white\",\n        borderBottom: \"0\",\n        color: \"black\",\n},\nvertical: {\n    '& $rail': {\n        width: 8,\n    },\n    '& $track': {\n        width: 8\n    },\n    '& $thumb': {\n        marginLeft: -4.5 ,\n            marginBottom: -11\n    }\n}\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\nconst VerticalSlider = (props) => {\n    const {title, defaultValue, userRhythms, idInstrument, idRhythm} = props;\n    const classes = useStyles();\n    return (\n        <>\n            <div className={classes.root}>\n                <div className={classes.title}>\n                    <Typography id=\"vertical-slider\" gutterBottom>\n                        {title}\n                    </Typography>\n                </div>\n                <div style={{height:\"6rem\"}}>\n                    <CustomSlider\n                        orientation=\"vertical\"\n                        getAriaValueText={valuetext}\n                        defaultValue={defaultValue}\n                        value={userRhythms.data[idRhythm].instruments[idInstrument].volume}\n                        aria-labelledby=\"vertical-slider\"\n                        /*marks={marks}*/\n                        onChange={(e, value) => userRhythms.setData(\n                            produce(userRhythms.data, draft => {\n                                draft[idRhythm].instruments[idInstrument].volume = value;\n                            }))}\n\n                    />\n                </div>\n            </div>\n        </>\n    );\n}\nexport default VerticalSlider\n","export default __webpack_public_path__ + \"static/media/logo.57ea91e3.png\";","import React, {useContext} from 'react';\nimport styles from \"./SettingsSection.module.css\";\nimport {VerticalSlider} from \"../../index\";\nimport {AppContext} from \"../../../context/AppContext\";\nimport logo from \"../../../assets/logo.png\"\n\nconst SlidersContainer = (props) => {\n    const appData = useContext(AppContext)\n\n    let slidersContainer;\n\n    appData.userRhythms.data[appData.selectedRhythm.number] !== undefined &&\n    appData.userRhythms.data[appData.selectedRhythm.number].instruments.length === 8 ?\n        slidersContainer = (<>\n\n\n                    <div className={styles.section}>\n                        {appData.samplesList.filter((vs) => vs.id < 4).map((x) => {\n                            return <>\n                                <VerticalSlider title={x.name}\n                                                defaultValue={appData.userRhythms.data[appData.selectedRhythm.number].instruments[x.id].volume}\n                                                userRhythms={appData.userRhythms}\n                                                idInstrument={x.id}\n                                                idRhythm={appData.selectedRhythm.number}\n                                />\n\n                            </>\n                        })}\n                    </div>\n\n                    <div className={styles.section}>\n                        {appData.samplesList.filter((vs) => vs.id > 3).map((x) => {\n                            return <>\n                                <VerticalSlider title={x.name}\n                                                defaultValue={appData.userRhythms.data[appData.selectedRhythm.number].instruments[x.id].volume}\n                                                userRhythms={appData.userRhythms}\n                                                idInstrument={x.id}\n                                                idRhythm={appData.selectedRhythm.number}\n\n                                />\n                            </>\n                        })}\n                    </div>\n\n            </>\n    ) : slidersContainer = null;\n\n\n    return (\n        <>\n            <div className={styles.slidersContainer} style={appData.selectedRhythm.number === null ? {backgroundImage: `url(${logo})`, backgroundSize: \"contain\", backgroundPosition: \"center\", backgroundRepeat:\"no-repeat\"} : null} >\n                {slidersContainer}\n            </div>\n        </>\n    );\n}\n\nexport default SlidersContainer;","import React from 'react';\nimport {Button} from \"../index\";\nimport {BiHash, BiSelectMultiple, BsFillArrowRightSquareFill, FaMinus, FaPlay, FaPlus} from \"react-icons/all\";\n\nconst EffectPopup = () => {\nreturn <>\n    <div>\n        Here is the list of available effect:\n        <ul>\n            <li><b>autoFilter</b>: versatile filter effect with several unique features</li>\n        </ul>\n        <ul>\n            <li><b>autoPanner</b>: panner with an LFO connected to the pan amount</li>\n        </ul>\n        <ul>\n            <li><b>autoWah</b>: type of wah-wah effects pedal</li>\n        </ul>\n        <ul>\n            <li><b>bitCrusher</b>: distortion by reducing the resolution or bandwidth of digital audio data</li>\n        </ul>\n        <ul>\n            <li><b>distortion</b>: alteration of the original shape of the signal, based on hard-clipping</li>\n        </ul>\n        <ul>\n            <li><b>feedbackDelay</b>: time between the signal and its feedback</li>\n        </ul>\n        <ul>\n            <li><b>freeVerb</b>: stereo reverb</li>\n        </ul>\n        <ul>\n            <li><b>panVol</b>:controls the pan of the sound and its volume</li>\n        </ul>\n        <ul>\n            <li><b>tremolo</b>: modulation that rhythmically changes the volume</li>\n        </ul>\n\n        How to use these effects?\n        <ul>\n            <li> On each different rhythm is possible to apply one effect. </li>\n        </ul>\n        <ul>\n            <li>The effect is applied to all instruments at the same time!</li>\n        </ul>\n    </div>\n</>\n}\n\nexport default EffectPopup;","import React, {useState} from 'react';\nimport {Button} from \"../../index\";\nimport styles from \"./SettingsSection.module.css\"\nimport {GiMetronome} from \"react-icons/all\";\n\nfunction CalculateBpm(props) {\n    const {tempo} = props;\n    const [count, setCount] = useState(0);\n    const [timeFirst, setTimeFirst] = useState(0);\n    const [timePrevious, setTimePrevious] = useState(0);\n\n    const handleMouseDown = () => {\n        const timeSeconds = new Date();\n        const time = timeSeconds.getTime();\n\n        //if its been 3 seconds since last click reset the counter & previous time\n        if (timePrevious !== 0 && time - timePrevious > 3000) {\n            setCount(0);\n            setTimePrevious(time)\n            return false;\n        }\n        //if first click set the initial time and count\n        if (count === 0) {\n            setTimeFirst(time);\n            setCount(count+1);\n\n        } else {\n            const bpm = Math.round((60000 * count) / (time - timeFirst));\n            setCount(count+1)\n            setTimePrevious(time)\n            tempo.setValue(bpm)\n\n        }\n    };\n\n    return (\n        <>\n            <div onKeyDown={handleMouseDown}>\n                <Button onMouseDown={handleMouseDown}>\n                    <div className={styles.text}>BPM by CLICK </div>\n                    {/*<GiMetronome size={25}/> */}\n                </Button>\n            </div>\n            </>\n    );\n}\n\nexport default CalculateBpm;","import React, {useContext, useState} from 'react';\nimport styles from \"./SettingsSection.module.css\";\nimport {\n    Dropdown,\n    HorizontalSlider,\n    NumberControl,\n    Button,\n    ButtonsList,\n    Popup,\n    InstructionPopup,\n    DetailsPopup,\n    WetControl\n} from \"../../index\";\nimport {\n    HiVolumeUp,\n    HiVolumeOff,\n    BsQuestionSquareFill,\n    // BsFillArrowRightSquareFill,\n    BsInfoSquare,\n    GiMetronome\n} from \"react-icons/all\";\nimport {AppContext} from \"../../../context/AppContext\";\nimport SlidersContainer from \"./SlidersContainer\";\nimport EffectPopup from \"../../Popup/EffectPopup\";\nimport CalculateBpm from \"./CalculateBpm\";\n\n\n\nconst SettingsSection = (props) => {\n    const appData = useContext(AppContext);\n    const [open, setOpen] = useState(false);\n    const [open2, setOpen2] = useState(false);\n    const [open3, setOpen3] = useState(false);\n\n    return (\n        <>\n\n            <div className={styles.container}>\n                <div style={{\n                    width: \"120%\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    // marginLeft: \"-1.4rem\",\n                    flexWrap: \"wrap\"\n\n                }}>\n\n                    {/*HERE!*/}\n                    <div className={styles.auxButtons}>\n                        {/*<Button onClick={() => setOpen(!open)} buttonStyle={\"btn--secondary\"}><BsQuestionSquareFill size={20}/></Button>*/}\n\n                        <Button onClick={() => setOpen(!open)} buttonStyle={\"btn--secondary\"} style={{marginRight: \"0.2rem\"}}><BsInfoSquare size={30}/></Button>\n                        {appData.userRhythms.data[appData.selectedRhythm.number] !== undefined && (\n                        <Dropdown name={\"Choose Time\"}\n                                  listInRhythm={appData.userRhythms.data[appData.selectedRhythm.number].timeSignature}\n                                  jsonList={appData.timeSignaturesList}\n                                  type={\"time\"}\n                        />\n                        )}\n                        <NumberControl tempo={appData.tempo} play={appData.play} label={\"BPM\"}/>\n                        <Button onClick={() => setOpen2(!open2)} buttonStyle={\"btn--secondary\"}><BsQuestionSquareFill size={20}/></Button>\n\n\n                    </div>\n\n                    <HorizontalSlider title={\"Volume\"} defaultValue={50}\n                                      icon={!appData.mute.value ? <HiVolumeUp size={24} /> : <HiVolumeOff size={24} />}\n                                      volumeValue={appData.volume.value}\n                                      onChangeValue={appData.volume.setValue}\n                                      mute={appData.mute.value}\n                                      onChangeMute={appData.mute.setValue}/>\n\n\n                </div>\n\n                <ButtonsList/>\n\n                <div className={styles.divider}></div>\n\n                <div className={styles.auxButtons}>\n                    {/*<Button onClick={() => setOpen(!open)} buttonStyle={\"btn--secondary\"}><BsQuestionSquareFill size={20}/></Button>*/}\n\n                    {/*<WetControl wet={appData.userRhythms.data[appData.selectedRhythm.number].wet}\n                                 rhythm={appData.userRhythms} label={\"Wet %\"}/>*/}\n                    {appData.userRhythms.data[appData.selectedRhythm.number] !== undefined && (\n                        <Dropdown name={\"Wet %\"}\n                                  listInRhythm={appData.userRhythms.data[appData.selectedRhythm.number].wet}\n                                  jsonList={appData.wetList}\n                                  type={\"wet\"}\n                                  dropdownStyle={'dropdown--secondary'}\n                                  contentStyle={'content--secondary'}\n                        />)\n                    }\n                    {appData.userRhythms.data[appData.selectedRhythm.number] !== undefined &&  (<Dropdown name={\"Effects\"}\n                              listInRhythm={appData.userRhythms.data[appData.selectedRhythm.number].effect}\n                              jsonList={appData.effectList}\n                              type={\"effect\"}\n\n                    />\n                    )}\n                    <Button onClick={() => setOpen3(!open3)} buttonStyle={\"btn--secondary\"}><BsQuestionSquareFill size={20}/></Button>\n\n\n                </div>\n                {\n                    open ? <Popup title={appData.popupsList[0].title} body={<InstructionPopup/>} open={open} onChangeOpen={setOpen}/> : null\n                }\n\n                {\n                    open2 ? <Popup title={appData.popupsList[1].title} body={<DetailsPopup/>} open={open2} onChangeOpen={setOpen2}/> : null\n                }\n                {\n                    open3 ? <Popup title={appData.popupsList[2].title} body={<EffectPopup/>} open={open3} onChangeOpen={setOpen3}/> : null\n                }\n                <SlidersContainer />\n            </div>\n        </>\n    );\n}\n\nexport default SettingsSection;","import React from 'react';\nimport styles from \"./RhythmSection.module.css\";\nimport {Button} from \"../../index\";\nimport {AppContext} from \"../../../context/AppContext\";\n\nconst PatternSections = (props) => {\n    const {list, rhythms} = props\n    return (\n        <>\n            <div className={styles.patterns}>\n\n                {list.map((x, i) => {\n                    return (\n                        <Button buttonStyle={'btn--patterns'} onClick={() => {\n                            rhythms.insertPattern(x.name, i)\n                        }}>\n                            {x.name}\n                        </Button>)\n                })}\n\n            </div>\n        </>\n    );\n}\n\nexport default PatternSections;","import React, {useContext} from 'react';\nimport styles from \"./RhythmSection.module.css\";\nimport {Drumpad, Display} from \"../../index\";\nimport {AppContext} from \"../../../context/AppContext\";\nimport PatternSections from \"./PatternSections\";\n\nconst RhythmSection = (props) => {\n    const appData = useContext(AppContext);\n    return (\n        <>\n            <div className={styles.container}\n                 style={appData.selectedRhythm.number == null ? {justifyContent: \"center\"} : {justifyContent: \"space-between\"}}>\n                <Display/>\n\n\n                <div\n                     style={appData.selectedRhythm.number == null ? {display: \"none\"} : {display: \"\"}}> {/*Se ha selezionato tutto mostra solo display*/}\n                    <PatternSections list={appData.patternList} rhythms={appData.userRhythms}/>\n                </div>\n\n                <div className={styles.drumpad}\n                     style={appData.selectedRhythm.number == null ? {display: \"none\"} : {display: \"\"}}> {/*Se ha selezionato tutto mostra solo display*/}\n                    <Drumpad />\n                </div>\n\n            </div>\n        </>\n    );\n}\n\nexport default RhythmSection;","import React, {useContext} from 'react';\nimport {StepButton} from \"../../../index\";\nimport {AppContext} from \"../../../../context/AppContext\";\n\nconst StepButtonsList = (props) => {\n    const {idInstrument, instrument, idRhythm} = props;\n    const appData = useContext(AppContext)\n\n    let array = [];\n\n    if(appData.selectedRhythm.item.instruments !== undefined){\n        for (let i = 0; i < appData.selectedRhythm.item.numStepButtons ; i++) {\n            array.push(<StepButton id={i}\n                                   instrument={instrument}\n                                   idInstrument={idInstrument}\n                                   idRhythm={idRhythm}\n                                   userRhythms={appData.userRhythms}\n                                   active={appData.selectedRhythm.item.instruments[idInstrument].pad[i]}\n            />);\n        }\n    }\n\n\n    return array;\n\n}\n\nexport default StepButtonsList;","import React, {useContext, useState} from 'react';\nimport {BiSelectMultiple, GiMetronome, BsFillArrowRightSquareFill, BsInfoSquare, BsQuestionSquareFill, FaMinus, FaPause, FaPlay, FaPlus, FaStop} from \"react-icons/all\";\nimport {Button, Popup} from \"../../index\";\nimport styles from \"./SettingsSection.module.css\";\nimport {AppContext} from \"../../../context/AppContext\";\nimport produce from \"immer\";\nimport CalculateBpm from \"./CalculateBpm\";\n\nconst ButtonsList = (props) => {\n    const [open, setOpen] = useState(false);\n    const appData = useContext(AppContext);\n\n    return (\n        <>\n\n            <div className={styles.playButtons}>\n                <Button onClick={() => {\n                    appData.play.setValue(!appData.play.value);\n                }} >{appData.play.value ?<FaPause/> : <FaPlay/>} </Button>\n                <CalculateBpm tempo={appData.tempo}/>\n\n            </div>\n\n            <div className={styles.rhythmButtonsSection} >\n\n                <div className={styles.rhythmButtonsControls}>\n                    {/*<Button onClick={() => setOpen(!open)} buttonStyle={\"btn--secondary\"} style={{marginRight: \"1rem\"}}><BsQuestionSquareFill size={20}/></Button>*/}\n                    <Button buttonStyle={appData.selectedRhythm.number == null ?\n                        'btn--primary--active' : 'btn--primary'}\n                            onClick={() => appData.selectedRhythm.setNumber(null)}>\n\n                        All <BiSelectMultiple size={20}/>\n                    </Button>\n                    <Button onClick={() => appData.rhythmsList.setItem(appData.rhythmsList.item.concat(appData.rhythmsList.item.length))}> <FaPlus/> </Button>\n\n                    <Button onClick={() => {\n                        appData.rhythmsList.setItem(produce(appData.rhythmsList.item, draft => {\n                            draft.splice(appData.rhythmsList.item.length-1)\n                        }))\n                        if(appData.userRhythms.data[appData.rhythmsList.item.length-1] !== undefined) { /*nel momento in cui si elimina un ritmo cancella tutti i dati*/\n                            appData.userRhythms.setData(produce(appData.userRhythms.data, draft => {\n                                draft.splice(appData.rhythmsList.item.length-1)\n                            }))\n                        }\n\n                    }}> <FaMinus/> </Button>\n                </div>\n                <div className={styles.rhythmButtonsList} style={appData.rhythmsList.item.length > 5 ? {overflowY: \"scroll\"} : {overflow:\"hidden\"}} >\n                    {appData.rhythmsList.item.map((x) => {\n                        return <Button buttonStyle={appData.selectedRhythm.number === x ? 'btn--primary--active' : 'btn--primary'} onClick={() => appData.selectedRhythm.setNumber(x)}>{x+1}</Button>\n                    })}\n                </div>\n                {/*{\n                    open ? <Popup title={appData.popupsList[0].title} body={appData.popupsList[0].body} open={open} onChangeOpen={setOpen}/> : null\n                }*/}\n            </div>\n        </>\n    );\n}\n\nexport default ButtonsList;","import React, {useEffect, useState} from 'react';\nimport {Effect, Song, Track} from \"reactronica\";\nimport {useSteps} from \"../../hooks\";\nimport {CustomInstrument} from \"../index\";\n\nconst PlayRhythm = (props) => {\n\n    const {play, tempo, volume, mute, item, noteDict, numStepButtons, indexNoteDict} = props;\n    const [steps, setSteps] = useSteps(item, numStepButtons, Object.keys(noteDict[indexNoteDict]));\n    const [sample, setSample] = useState(noteDict[indexNoteDict])\n    let bpm = tempo * (item.denominator/4);\n    let newVolume = volume/25\n\n    useEffect(() =>{\n        setSample(noteDict[indexNoteDict])\n    }, [indexNoteDict])\n\n    return (\n\n        <>\n            <Song isPlaying={play.value } bpm={bpm} volume={newVolume}\n                  isMuted={mute || volume === 0}>\n                {steps.map((x, i) => {\n                    return (<Track\n                        volume={item.instruments[i].volume/5} /*divido per 25 altrimenti gracchia troppo*/\n                        mute={item.instruments[i].volume === 0 || mute}\n                        steps={x}\n\n                    >\n                        {item.wet !== 0 ? <Effect type={item.effect} wet={item.wet}/> : null}\n\n\n                        {/*<Instrument\n                            type=\"sampler\"\n                            samples={noteDict[0]}\n                            /*onLoad={(buffers) => {\n                                play.setLoad(true)\n                            }}\n                        />\n*/}\n                        <CustomInstrument samples={sample} />\n                    </Track>)\n                })}\n\n            </Song>\n        </>\n    );\n}\n\nexport default PlayRhythm;","import React from 'react';\nimport styles from \"./Popup.module.css\"\nimport {GrClose} from \"react-icons/all\";\n\nfunction Popup(props) {\n    const {title, body, open, onChangeOpen} = props;\n    return (\n        <>\n            <div>\n                <div className={styles.overlay}>\n                 <div className={styles.container}>\n                     <div className={styles.closeSection}>\n                         <span className={styles.closeButton} onClick={() => onChangeOpen(!open)}><GrClose size={20}/></span>\n                     </div>\n\n                    <div className={styles.titleContainer}>\n                        <div className={styles.title}>{title}</div>\n                    </div>\n                     <div className={styles.divider}/>\n                    <div className={styles.body}>\n                        <p>{body}</p>\n                    </div>\n                </div>\n\n                </div>\n            </div>\n        </>\n    );  \n}\n\nexport default Popup;","import React, {useContext, useEffect, useState} from 'react';\nimport {AppContext} from \"../../../../context/AppContext\";\nimport styles from \"./Display.module.css\";\nimport {useIndices} from \"../../../../hooks\";\nimport app from \"../../../../App\";\n\nconst FinalInstrumentsRhythm = (props) => {\n    const appData = useContext(AppContext);\n    const [indices, setIndices] = useIndices();\n    let minute = 60000;\n    let seconds = minute/appData.tempo.value;\n\n     if(appData.tempo.value >= 120 && appData.tempo.value <= 150){\n        seconds = (minute/appData.tempo.value - appData.tempo.value/4);\n        console.log(\"SECONDI\", seconds)\n    }\n    else if(appData.tempo.value > 150){\n        seconds = (minute/appData.tempo.value - appData.tempo.value/6);\n    }\n\n    useEffect(() => { /*Funzione per evidenziare l'index suonato*/\n        if(appData.play.value){\n            const interval = setInterval(() => {\n                if(appData.play.index < indices.length-1){\n                    appData.play.setIndex(appData.play.index + 1);\n                }\n                else{\n                    appData.play.setIndex(0);\n                }\n            }, seconds);\n            return () => clearInterval(interval);\n        }\n        else {\n            appData.play.setIndex(0)\n        }\n\n    }, [appData.play]);\n\n    /*disegna, assieme a drawFinalRhythm, la colonna del\n     ritmo finale indicando quali strumenti vengono suonati per ogni indice*/\n    const controlPad = (index, db) => {\n        let array = [];\n        for (let i = 0; i < db.length; i++){\n            if(db[i] !== undefined) {\n                let padIndex = index % db[i].numStepButtons;\n                for (let y = 0; y < db[i].instruments.length; y++){\n                    if(db[i].instruments[y].pad[padIndex]){\n                        array[y] = true;\n                    }\n                }\n            }\n\n        }\n        return array;\n    }\n\n    const drawFinalRhythm = (index, db, instruments) => {\n        let pads = controlPad(index, db);\n        let draw = []\n        for (let i = 0; i < instruments.length; i++){\n            if(pads[i]){\n                draw.push(<div className={appData.selectedRhythm.number != null ? styles.box : styles.allDisplayBox}><div className={styles.toggleActive}> </div></div>)\n            } else {\n                draw.push(<div className={appData.selectedRhythm.number != null ? styles.box : styles.allDisplayBox}><div className={styles.toggle}> </div></div>)\n            }\n        }\n        return draw;\n    }\n\n\n    return (\n        <>\n            <div className={styles.columnTitles} style={appData.selectedRhythm.number == null ? {marginTop: \"8%\"} : null}>\n                {appData.samplesList.map((x) => {\n                    return <>\n                        <div className={styles.title} style={appData.selectedRhythm.number == null ? {height: \"3rem\"} : null}>\n                            {x.name}\n                        </div>\n                    </>\n                })}\n            </div>\n            <div className={styles.tab}>\n            {\n                indices.map((x, i) => {\n                    return (\n                        <div className={styles.columnSteps} style={appData.play.index === i ? {background: \"transparent\", border: \"2px solid #b388ff\", color: \"white\"} : null} >\n                            <div className={appData.selectedRhythm.number != null ? styles.box : styles.allDisplayBox}>{x}</div>\n                            {drawFinalRhythm(i, appData.userRhythms.data, appData.samplesList)}\n                        </div>\n                    )\n                })\n            }\n            </div>\n        </>\n    );\n}\n\nexport default FinalInstrumentsRhythm;","import { useEffect, useLayoutEffect, useState } from \"react\";\n\nexport default function useMediaQuery(breakpoint) {\n    const [match, setMatch] = useState(false);\n\n    // Should immediately set device when firstly mounted, \"during\" browser paint\n    useLayoutEffect(() => {\n        setMatch(window.matchMedia(query(breakpoint)).matches);\n    }, [breakpoint]);\n\n    // Set listener for viewport changes\n    useEffect(() => {\n        const mq = window.matchMedia(query(breakpoint));\n        const listener = (e) => setMatch(e.matches);\n        mq.addEventListener(\"change\", listener);\n        return () => mq.removeEventListener(\"change\", listener);\n    }, [breakpoint]);\n\n    return match;\n}\n\nconst query = (breakpoint) => `(max-width: ${breakpoint}px)`;\n\nexport const Device = {\n    xs: 0,\n    sm: 600,\n    md: 960,\n    lg: 1280,\n    xl: 1920\n};","import React, {useContext} from 'react';\nimport styles from \"./Display.module.css\";\nimport {AppContext} from \"../../../../context/AppContext\";\nimport FinalInstrumentsRhythm from \"./FinalInstrumentsRhythm\";\nimport useMediaQuery, {Device} from \"../../../../hooks/useMediaQuery\";\n\nconst Display = (props) => {\n    const appData = useContext(AppContext)\n    const isPc = useMediaQuery(Device.xl)\n\n    return (\n        <>\n            <div className={styles.display} style={appData.selectedRhythm.number == null ? {height: \"60%\"} : (!isPc ? { height: \"40%\"} : {height: \"auto\"}) }>\n                <div className={styles.container}>\n                       <FinalInstrumentsRhythm/>\n                </div>\n            </div>\n\n        </>\n    );\n}\n\nexport default Display;","import React from 'react';\nimport {Button} from \"../index\";\nimport styles from \"./Popup.module.css\"\nimport {BiHash, BiSelectMultiple,BsFillArrowRightSquareFill, BsInfoSquare,  FaMinus, FaPlay, FaPlus} from \"react-icons/all\";\n\nconst InstructionPopup = (props) => {\n    return (<>\n        <div>\n            <div style={{display: \"flex\", height: \"3rem\", alignItems:\"center\"}}>\n                <Button ><FaPlay/></Button>\n                <div style={{marginLeft: \"1rem\"}}>Play/Pause button</div>\n            </div>\n            <div style={{display: \"flex\", height: \"3rem\", alignItems:\"center\"}}>\n                <Button> All <BiSelectMultiple size={20}/></Button>\n                <div style={{marginLeft: \"1rem\"}}>button to display and play all rhythms together</div>\n            </div>\n            <div style={{display: \"flex\", height: \"3rem\", alignItems:\"center\"}}>\n                <Button><FaPlus/></Button>\n                <div style={{marginLeft: \"1rem\"}}>button to add a rhythm</div>\n            </div>\n            <div style={{display: \"flex\", height: \"3rem\", alignItems:\"center\"}}>\n                <Button><FaMinus/></Button>\n                <div style={{marginLeft: \"1rem\"}}>button to delete the last rhythm</div>\n            </div>\n            <div style={{display: \"flex\", height: \"3rem\", alignItems:\"center\"}}>\n                <Button><BiHash/></Button>\n                <div style={{marginLeft: \"1rem\"}}>button to select a specific rhythm</div>\n            </div>\n            <div style={{display: \"flex\", height: \"3rem\", alignItems:\"center\"}}>\n\n                <Button><div className={styles.text}>BPM by CLICK </div></Button>\n                <div style={{marginLeft: \"1rem\"}}>button to select a specific rhythm</div>\n            </div>\n            <br/>\n            On the right the PolyDrum is so divided:\n            <ul>\n                <li>On top: <b>display, to see the final rhythm</b></li>\n                <li>On bottom: <b>pad, to custom your rhythms</b></li>\n            </ul>\n            Now it's time to play! <br/>\n            Choose between the following modalities:\n            <ul>\n                <li>CUSTOM MODE:<b> choose the time, then use the pad!</b></li>\n                <li>QUICK MODE:<b> choose and press a PRESET!</b></li>\n            </ul>\n\n        </div>\n    </>);\n}\n\nexport default InstructionPopup;","import React from 'react';\nimport {GiMetronome} from \"react-icons/all\";\n\n\nconst DetailsPopup = () => {\n    return <>\n        <div>\n            Time signature is defined in the following way:\n            <ul>\n                <li><b>m/n</b> --> m beats, each an n-th of the whole note (first)</li>\n                <li><b>i/j</b> --> i beats, each an j-th of the whole note (second)</li>\n            </ul>\n\n            <ul>\n                <li>The first rhythm fits a measure of m beats, each lasting 1/n of a whole note</li>\n                <li>The second rhythm fits a measure of i beats, each lasting 1/j of a whole note</li>\n            </ul>\n            A complex rhythm is indicated as <b>m/n : i/j</b><br/>\n            To find a single signature that accommodates both sub-signatures of a polymetric structure:\n            <ul>\n                <li>N<sub>i</sub> / D<sub>i</sub> --> i rhythm</li>\n                <li>N<sub>1</sub> / D<sub>1</sub> : N<sub>2</sub> / D<sub>2</sub> --> N / D</li><br/>\n                Where, in the general case:\n                <ul>\n                    <li>D = lcm (D<sub>1</sub>, D<sub>2</sub>)</li>\n                    <li>N = lcm (N<sub>1</sub>K<sub>1</sub>, N<sub>2</sub>K<sub>2</sub>)</li>\n                    <li> K<sub>i</sub> = D / D<sub>i</sub></li>\n                </ul>\n            </ul>\n            <b>In this implementation n = j, meaning that the PolyDrum is polymetric.\n            D is a fixed value equal to 4.</b>\n        </div>\n    </>\n}\n\nexport default DetailsPopup;","import React from 'react';\nimport {Instrument} from \"reactronica\";\n\nconst CustomInstrument = React.memo(props => {\n        const {samples} = props;\n\n        return (\n            <>\n                <Instrument\n                    type=\"sampler\"\n                    samples={samples}\n                />\n\n            </>\n        );\n    }\n)\n\nexport default CustomInstrument;","import React from 'react';\nimport styles from \"./Drumbit.module.css\";\nimport {\n    SettingsSection, RhythmSection\n} from \"../components\";\n\nfunction Drumbit() {\n\n    return (\n        <div className={styles.container}>\n            <SettingsSection />\n            <RhythmSection/>\n        </div>\n\n    );\n}\n\nexport default Drumbit;","import './App.css';\nimport {Drumbit} from \"./view\";\nimport { AppContext, useAppContext } from \"./context/AppContext\";\n\nfunction App() {\n    const appData = useAppContext();\n  return (\n    <>\n        <AppContext.Provider value={appData}>\n            <Drumbit/>\n        </AppContext.Provider>\n{/*\n        {console.log(\"-----------\\nplay è: \", appData.play.value)}\n        {console.log(\"ho cambiato la VELOCITA' in: \", appData.tempo.value)}\n        {console.log(\"ho cambiato il VOLUME in: \", appData.volume.value, \"\\n-------------\\n\")}\n\n        {console.log(\"Il ritmo selezionato è :\", appData.selectedRhythm.number)}\n        {console.log(\"il JSON del ritmo è: \", appData.selectedRhythm.item)}*/}\n        {console.log(\"I RITMI DELL'UTENTE SONO: \", appData.userRhythms.data)}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SettingsSection_container__1hMaU\",\"divider\":\"SettingsSection_divider__3mBhh\",\"slidersContainer\":\"SettingsSection_slidersContainer__yePbD\",\"section\":\"SettingsSection_section__2FB09\",\"rhythmButtonsSection\":\"SettingsSection_rhythmButtonsSection__3NFB0\",\"rhythmButtonsControls\":\"SettingsSection_rhythmButtonsControls__32ifS\",\"rhythmButtonsList\":\"SettingsSection_rhythmButtonsList__6pOl2\",\"playButtons\":\"SettingsSection_playButtons__32TXZ\",\"auxButtons\":\"SettingsSection_auxButtons__fhlHf\",\"text\":\"SettingsSection_text__SJeZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Display_display__pBf13\",\"container\":\"Display_container__1Ut_9\",\"title\":\"Display_title__3g1cv\",\"columnTitles\":\"Display_columnTitles__1RL-N\",\"tab\":\"Display_tab__-vEYo\",\"columnSteps\":\"Display_columnSteps__24mBq\",\"box\":\"Display_box__211Qx\",\"allDisplayBox\":\"Display_allDisplayBox__1Yg81\",\"toggle\":\"Display_toggle__3PNd3\",\"toggleActive\":\"Display_toggleActive__3xJsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Popup_overlay__2z1tN\",\"container\":\"Popup_container__3c3g9\",\"titleContainer\":\"Popup_titleContainer__1pOzD\",\"title\":\"Popup_title__1Xsgh\",\"body\":\"Popup_body__3N2bX\",\"closeSection\":\"Popup_closeSection__VeM8H\",\"closeButton\":\"Popup_closeButton__MlIK3\",\"divider\":\"Popup_divider__16qkM\",\"text\":\"Popup_text__uc0Jh\",\"popup\":\"Popup_popup__3TSql\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Drumpad_container__gC20J\",\"line\":\"Drumpad_line__3HGGJ\",\"stepButton\":\"Drumpad_stepButton__16HAN\",\"setSounds\":\"Drumpad_setSounds__gH_zT\",\"arrow\":\"Drumpad_arrow__9HA3F\",\"title\":\"Drumpad_title__1CauR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Dropdown_button__24a8T\",\"content\":\"Dropdown_content__1bUId\",\"item\":\"Dropdown_item__13Fku\",\"dropLabel\":\"Dropdown_dropLabel__2H6V8\",\"activeDrop\":\"Dropdown_activeDrop__2PwVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RhythmSection_container__3KHx6\",\"drumpad\":\"RhythmSection_drumpad__3__E-\",\"patterns\":\"RhythmSection_patterns__1Fxjj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Sliders_container__2Wu0x\",\"slider\":\"Sliders_slider__1LPAi\",\"value\":\"Sliders_value__20rHI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StepButton_container__2GycN\",\"active\":\"StepButton_active__1JLP4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Drumbit_container__1dNss\"};"],"sourceRoot":""}