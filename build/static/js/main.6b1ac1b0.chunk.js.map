{"version":3,"sources":["components/StepButton/StepButton.js","components/Slider/HorizontalSlider.js","hooks/useSelectedRhythm.js","hooks/useSteps.js","hooks/useIndices.js","context/AppContext.js","components/Dropdown/Dropdown.js","components/NumberControl/NumberControl.js","components/PagesSections/RhythmSection/Drumpad/Drumpad.js","components/Button/Button.js","components/Slider/VerticalSlider.js","assets/logo.png","components/PagesSections/SettingsSection/SlidersContainer.js","components/PagesSections/SettingsSection/SettingsSection.js","components/PagesSections/RhythmSection/RhythmSection.js","components/PagesSections/RhythmSection/Drumpad/StepButtonsList.js","components/PagesSections/SettingsSection/ButtonsList.js","components/PlayRhythm/PlayRhythm.js","components/Popup/Popup.js","components/PagesSections/RhythmSection/Display/FinalInstrumentsRhythm.js","components/PagesSections/RhythmSection/Display/Display.js","components/Popup/InstructionPopup.js","components/Popup/DetailsPopup.js","components/CustomInstrument/CustomInstrument.js","view/Drumbit.js","App.js","reportWebVitals.js","index.js","components/PagesSections/RhythmSection/Display/Display.module.css","components/PagesSections/SettingsSection/SettingsSection.module.css","components/Popup/Popup.module.css","components/Dropdown/Dropdown.module.css","components/PagesSections/RhythmSection/Drumpad/Drumpad.module.css","components/SampleLine/SampleLine.module.css","components/StepButton/StepButton.module.css","components/PagesSections/RhythmSection/RhythmSection.module.css","view/Drumbit.module.css"],"names":["StepButton","props","id","idInstrument","idRhythm","userRhythms","active","children","className","styles","container","onClick","setData","produce","data","draft","instruments","pad","useStyles","makeStyles","theme","root","width","spacing","textAlign","margin","height","line","display","flexDirection","alignItems","icon","marginRight","cursor","RoundSlider","withStyles","color","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","valueLabel","left","track","borderRadius","rail","Slider","HorizontalSlider","title","defaultValue","volumeValue","onChangeValue","mute","onChangeMute","classes","useEffect","onChangeVolumeValue","changeVolume","Typography","gutterBottom","Grid","item","valueLabelDisplay","min","max","step","value","onChange","e","useSelectedRhythm","db","setDb","useContext","AppContext","useState","selectedRhythm","setSelectedRhythm","undefined","initRhythmObj","setRhythmObj","temp","timeSignature","numStepButtons","useSteps","length","steps","setSteps","noteDict","updateSteps","map","x","i","column","j","push","useIndices","appData","indices","setIndices","updateIndices","array","numerator","denominator","math","lcm","findNumIndices","React","createContext","useAppContext","bpm","setBpm","isPlay","setPlay","volume","setVolume","setMute","setIdRhythm","setTimeSignature","numRhythm","setNumRhythm","setNumStepButton","currentIndex","setCurrentIndex","load","setLoad","itemSelectedRhythm","setItemSelectedRhythm","a","b","hcf","updateUserRhythms","newNumStepButton","newTimeSignature","newDenominator","samplesList","itemInstrument","name","y","updatePad","useMemo","popupsList","timeSignaturesList","play","setValue","index","setIndex","stepButtons","number","setNumber","setItem","rhythmsList","update","tempo","Dropdown","open","setOpen","dropdown","activeDrop","button","dropLabel","content","CustomTextField","padding","borderBottomColor","borderColor","TextField","NumberControl","noValidate","autoComplete","label","type","variant","InputLabelProps","shrink","inputProps","style","target","playItem","Drumpad","stepButton","instrument","STYLES","Button","buttonStyle","buttonSize","buttonColor","checkButtonStyle","includes","justifyContent","marginBottom","CustomSlider","borderBottom","vertical","valuetext","VerticalSlider","orientation","getAriaValueText","SlidersContainer","slidersContainer","section","filter","vs","backgroundImage","logo","backgroundSize","backgroundPosition","backgroundRepeat","SettingsSection","open2","setOpen2","size","divider","auxButtons","body","onChangeOpen","RhythmSection","drumpad","StepButtonsList","ButtonsList","playButtons","rhythmButtonsSection","rhythmButtonsControls","concat","splice","rhythmButtonsList","overflowY","overflow","PlayRhythm","newVolume","isPlaying","isMuted","samples","Popup","overlay","closeSection","closeButton","titleContainer","FinalInstrumentsRhythm","minute","seconds","interval","setInterval","clearInterval","drawFinalRhythm","pads","padIndex","controlPad","draw","box","allDisplayBox","toggleActive","toggle","columnTitles","tab","columnSteps","background","Display","InstructionPopup","DetailsPopup","CustomInstrument","memo","console","log","Drumbit","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6b1ac1b0.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from './StepButton.module.css'\nimport produce from \"immer\"\n\nconst StepButton = (props) => {\n    const {id, idInstrument, idRhythm, userRhythms, active} = props;\n    const {children} = props\n\n    return (\n        <>\n            <div className={active ? styles.active : styles.container}\n                 onClick={() => {userRhythms.setData(produce(userRhythms.data, draft => { /*Cambia lo stato dello stepButton all'interno del JSON*/\n                     draft[idRhythm].instruments[idInstrument].pad[id] = !active;\n                 }))}}>\n                {children}\n            </div>\n\n        </>\n    );\n}\n\nexport default StepButton;","import React, {useContext, useEffect} from 'react';\nimport {makeStyles, Slider, Typography, withStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {VolumeDown} from \"@material-ui/icons\";\nimport VolumeUp from '@material-ui/icons/VolumeUp';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300 + theme.spacing(3) * 2,\n        textAlign: \"center\"\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n    line: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\"\n    },\n    icon: {\n        marginRight: \"1rem\",\n        \"&:hover\":{\n            cursor: \"pointer\",\n        }\n    }\n}));\n\nconst RoundSlider = withStyles({\n    root: {\n        color: 'darkred',\n        height: 8,\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    thumb: {\n        height: 24,\n        width: 24,\n        backgroundColor: 'white',\n        border: '3px solid currentColor',\n        marginTop: -8,\n        marginLeft: -12,\n        '&:focus, &:hover, &$active': {\n            boxShadow: 'inherit',\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 4px)',\n    },\n    track: {\n        height: 8,\n        borderRadius: 4,\n        color: \"white\"\n    },\n    rail: {\n        height: 8,\n        borderRadius: 4,\n        color: \"black\"\n    },\n})(Slider);\n\nconst changeVolume = (mute, onChangeVolumeValue, defaultValue) => {\n    if(mute){\n        onChangeVolumeValue(0);\n    } else {\n        onChangeVolumeValue(defaultValue)\n    }\n}\n\nconst HorizontalSlider = (props) => {\n    const {title, defaultValue, volumeValue, onChangeValue, icon, mute, onChangeMute} = props;\n    const classes = useStyles();\n\n    useEffect(() => {\n        changeVolume(mute, onChangeValue, defaultValue)\n    }, [mute]);\n\n    return (\n        <>\n            <div className={classes.root}>\n                <Typography gutterBottom>{title}\n                </Typography>\n                <div className={classes.line}>\n                    <div className={classes.icon}>\n                        <Grid item>\n                            <div onClick={() => {\n                                onChangeMute(!mute);\n                            }}>{icon}</div>\n                        </Grid>\n                    </div>\n                    \n                    <RoundSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\"\n                        // defaultValue={defaultValue}\n                                 min={0} max={100} step={1}\n                                 value={volumeValue}\n                                 onChange={(e, value) => onChangeValue(value)} />\n                </div>\n\n\n            </div>\n        </>\n    );\n}\n\nexport default HorizontalSlider;\n\n","import React, {useContext, useEffect, useState} from 'react';\nimport {AppContext} from \"../context/AppContext\";\n\nconst useSelectedRhythm = (idRhythm, db, setDb) => {\n    const appData = useContext(AppContext);\n    const [selectedRhythm, setSelectedRhythm] = useState({})\n\n    useEffect(() => {\n        if(db[idRhythm] === undefined && idRhythm !== null){\n            initRhythmObj();\n        } else {\n            setRhythmObj();\n        }\n    }, [idRhythm, db]);\n\n    const initRhythmObj = () => { /*Crea un oggetto vuoto e lo inserisce*/\n        let temp = [...db];\n        let item = {\n            timeSignature : \"\",\n            numStepButtons: 0,\n            instruments: []\n        }\n        temp[idRhythm] = item;\n        setDb(temp);\n        setSelectedRhythm(db[idRhythm])\n    }\n\n    const setRhythmObj = () => { /*seleziona l'oggetto nell'array di JSON*/\n        if(idRhythm !== null) {\n            setSelectedRhythm(db[idRhythm])\n        } else {\n            setSelectedRhythm(db);\n\n        }\n    }\n    return [selectedRhythm, setSelectedRhythm];\n}\n\nexport default useSelectedRhythm;","import React, {useContext, useEffect, useState} from 'react';\nimport {AppContext} from \"../context/AppContext\";\n\nconst useSteps = (item, length) => {\n    const appData = useContext(AppContext);\n    const [steps, setSteps] = useState([])\n\n    const noteDict = [\"A1\", \"A#1\", \"B1\", \"C1\", \"C#1\", \"D1\", \"D#1\", \"E1\"]\n    useEffect(() => {\n        /*if(item !== undefined && item.instruments !== undefined) {\n            updateSteps();\n        }*/\n        updateSteps()\n    }, [item, length]);\n\n    const updateSteps = () => { /* crea steps per poter settare singolarmente tutti i volumi*/\n        let temp = [];\n        item.instruments.map((x, i) =>{\n            let column = []\n            for (let j = 0; j < length; j++){\n                if(x.pad[j]){\n                    column.push(noteDict[i]);\n                } else {\n                    column.push([]);\n                }\n            }\n            temp.push(column)\n        })\n        /*console.log(\"\\n\\nTEMP DI MERDA È: \",temp)*/\n        setSteps(temp);\n    }\n\n    return [steps, setSteps];\n}\n\nexport default useSteps;","import React, {useContext, useEffect, useState} from 'react';\nimport {AppContext} from \"../context/AppContext\";\n\nconst useIndices = () => {\n    const appData = useContext(AppContext);\n    const [indices, setIndices] = useState([]);\n\n    useEffect(() => {\n        if(appData.userRhythms.data !== undefined){\n            updateIndices()\n        }\n    }, [appData.timeSignature.value])\n\n    const findNumIndices = () => {\n        let numerator = 1;\n        let denominator = 1;\n        for(let i = 0; i < appData.userRhythms.data.length; i++){\n            if(appData.userRhythms.data[i] !== undefined){\n                numerator = appData.math.lcm(numerator, appData.userRhythms.data[i].numStepButtons);\n                denominator = appData.math.lcm(denominator, appData.userRhythms.data[i].denominator);\n            }\n        }\n        return numerator;\n    }\n\n    const updateIndices = () => {\n\n        let array = [];\n        let numerator = findNumIndices();\n\n        if(numerator !== 1){\n            for (let i = 1; i <= numerator; i++){\n                array.push(i);\n            }\n        }\n        setIndices(array);\n    }\n    return [indices, setIndices]\n\n\n}\n\nexport default useIndices;","import React, {useMemo, useRef, useState} from \"react\";\nimport timeSignaturesList from '../timeSignaturesList.json';\nimport samplesList from '../samplesList.json';\nimport noteDict from '../noteDict.json';\nimport popupsList from '../popupsList.json';\nimport {useSelectedRhythm} from \"../hooks\";\nimport produce from \"immer\";\n\nexport const AppContext = React.createContext({});\n\nexport function useAppContext() {\n    /*Settings*/\n    const [bpm, setBpm] = useState(90);\n    const [isPlay, setPlay] = useState(false);\n    const [volume, setVolume] = useState(50);\n    const [mute, setMute] = useState(false);\n    const [idRhythm, setIdRhythm] = useState(0);\n    const [timeSignature, setTimeSignature] = useState('');\n    const [numRhythm, setNumRhythm] = useState([0]);\n    const [numStepButtons, setNumStepButton] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [load, setLoad] = useState(false);\n\n    /*JSON*/\n    const [db, setDb] = useState([{\n        timeSignature : \"\",\n        numStepButtons: 0,\n        instruments: []\n    }]);/*Salva le informazioni di un ritmo*/\n\n    const [itemSelectedRhythm, setItemSelectedRhythm] = useSelectedRhythm(idRhythm, db, setDb);\n\n    const lcm = (a, b) => {\n        // looping from 1 to number1 and number2 to find HCF\n        let hcf;\n        for (let i = 1; i <= a && i <= b; i++) {\n            // check if is factor of both integers\n            if( a % i === 0 && b % i === 0) {\n                hcf = i;\n            }\n        }\n        // find LCM\n        let result = (a * b) / hcf;\n        return result\n    }\n\n    const updatePad = (temp, idRhythm) => {\n\n        samplesList.map((x) => {\n            let pad = [];\n            let itemInstrument = {\n                name: x.name,\n                pad: [],\n                volume: 50\n            };\n            if(temp[idRhythm].instruments.length === x.id){ /* se non sono stati inseriti tutti gli strumenti */\n                temp[idRhythm].instruments.push(itemInstrument) /* Aggiunge l'elemento all'array */\n            } else { /* ALTRIMENTI */\n                temp[idRhythm].instruments.map((y, i) => { /* Sostituisce il numero di stepButton all'interno di pad se l'utente cambia il ritmo */\n                    if(y.pad.length !== pad.length) {\n                        y.pad = pad;\n                    }\n                })\n            }\n        })\n    }\n\n    const updateUserRhythms = (newNumStepButton, newTimeSignature, newDenominator) => {\n\n        setNumStepButton(newNumStepButton);\n        setTimeSignature(newTimeSignature);\n\n        setDb(produce(db, draft => {\n            draft[idRhythm].timeSignature = newTimeSignature;\n            draft[idRhythm].numStepButtons = newNumStepButton;\n            draft[idRhythm].denominator = newDenominator;\n            updatePad(draft, idRhythm);\n        }))\n    }\n\n\n\n    return useMemo(\n        () => ({\n\n            popupsList,\n            timeSignaturesList,\n            samplesList,\n            noteDict,\n\n            math:{\n                lcm: lcm,\n            },\n            play:{\n                value: isPlay,\n                setValue: setPlay,\n                index: currentIndex,\n                setIndex: setCurrentIndex,\n                load: load,\n                setLoad: setLoad\n            },\n            stepButtons:{\n                value: numStepButtons,\n                setValue: setNumStepButton\n            },\n            selectedRhythm: { /*Ritmo selezionato dall'utente*/\n                number: idRhythm, /*id del ritmo scelto dall'utente*/\n                setNumber: setIdRhythm, /*set id del ritmo scelto dall'utente*/\n                item: itemSelectedRhythm, /*oggetto json del ritmo scelto dall'utente*/\n                setItem:  setItemSelectedRhythm /*set oggetto json del ritmo scelto dall'utente*/\n            },\n            rhythmsList: { /*Lista di ritmi per i bottoni*/\n                item: numRhythm,\n                setItem: setNumRhythm\n            },\n            userRhythms: { /*Array di JSON con tutti i ritmi dell'utente*/\n                data: db,\n                setData: setDb,\n                update: updateUserRhythms,\n\n            },\n            timeSignature: { /*tempo della battuta */\n                value: timeSignature,\n                setValue: setTimeSignature\n            },\n            tempo: {\n                value: bpm,\n                setValue: setBpm\n            },\n            volume: {\n                value: volume,\n                setValue: setVolume,\n            },\n            mute: {\n                value: mute,\n                setValue: setMute\n            }\n        }),\n        [bpm, setBpm, isPlay, volume, mute, timeSignature,\n            numStepButtons, numRhythm, idRhythm, itemSelectedRhythm, currentIndex,\n            load]\n    );\n}","import React, {useContext, useState} from 'react';\nimport styles from \"./Dropdown.module.css\";\nimport {FaArrowDown, RiArrowDownSLine} from \"react-icons/all\";\nimport {AppContext} from \"../../context/AppContext\";\nimport {MenuItem} from \"@material-ui/core\";\n\nconst Dropdown = (props) => {\n    const appData = useContext(AppContext);\n    const [open, setOpen] = useState(false);\n\n    return (\n        <>\n            {appData.userRhythms.data[appData.selectedRhythm.number] !== undefined && (\n                <div className={styles.dropdown}>\n                    <div className={open ? styles.activeDrop : styles.button} onClick={() => {setOpen(!open)}}>\n                        {appData.userRhythms.data[appData.selectedRhythm.number].timeSignature === \"\" ?\n                            <> <div className={styles.dropLabel}>Time Signature </div> <RiArrowDownSLine/></> :\n                            <>{appData.userRhythms.data[appData.selectedRhythm.number].timeSignature} <RiArrowDownSLine/> </>}\n\n                    </div>\n\n                    {open ? (\n                        <div className={styles.content}>\n                            {appData.timeSignaturesList.map((x) => {\n                                return <div className={styles.item} onClick={() => {\n                                    appData.userRhythms.update(x.numerator, x.value, x.denominator);\n                                    setOpen(false)\n                                }} key={x.value}>{x.value}</div>\n\n                            })}\n                        </div>\n                    ) : null}\n\n            </div>)}\n\n        </>\n    );\n}\nexport default Dropdown;","import React from 'react';\nimport {makeStyles, TextField, withStyles} from \"@material-ui/core\";\n\nconst CustomTextField = withStyles({\n    root: {\n        color: \"white\",\n        width: \"10rem\",\n        height: \"3rem\",\n        textAlign: \"center\",\n        \"& label.Mui-focused\": {\n            color: \"white\",\n        },\n        \"& .MuiOutlinedInput-input\": {\n            padding: \"1.2rem\"\n        },\n        \"& .MuiInput-underline:after\": {\n            border: \"2px solid\",\n            borderBottomColor: \"blue\",\n            color: \"blue\"\n        },\n        \"& .MuiOutlinedInput-root\": {\n            borderRadius: \"0.5rem\",\n            width: \"100%\",\n            color: \"white\",\n            textAlign: \"center\",\n            boxShadow: \"0 3px 10px 0 rgba(0, 0, 0, 0.6)\",\n            \"&.Mui-focused fieldset\": {\n                borderColor: \"darkred\",\n            },\n        },\n        \"& .MuiInputLabel-outlined\":{\n            color:\"white\",\n            borderColor:\"white\"\n        },\n        /* dropdown icon */\n        \"& .MuiSelect-icon\": {\n            color: \"yellow\"\n        },\n        /* color of the border */\n        \"& .MuiOutlinedInput-notchedOutline\":{\n            borderColor: \"white\"\n        }\n    },\n})(TextField);\n\nconst NumberControl = (props) => {\n    const {tempo} = props\n    return (\n        <>\n            <form  noValidate autoComplete=\"off\">\n\n                <CustomTextField\n                    id=\"outlined-number\"\n                    label=\"Tempo (BPM)\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    InputLabelProps={{\n                        shrink: true,\n\n                    }}\n                    inputProps={{min: 1, style: {textAlign: 'center'}}}\n\n                    defaultValue={tempo.value}/*NON CAMBIARE*/\n                    onChange={(e) => tempo.setValue(e.target.value)}/*NON CAMBIARE*/\n\n                />\n\n            </form>\n        </>\n    );\n}\n\nexport default NumberControl;","import React, {useContext, useEffect, useState} from 'react';\nimport styles from './Drumpad.module.css';\nimport {PlayRhythm, StepButtonsList} from \"../../../index\";\nimport {AppContext} from \"../../../../context/AppContext\";\n\nconst playItem = (item, appData) => {\n    if(item !== undefined &&\n        item.instruments !== undefined\n        && item.instruments.length === 8){\n        return (<PlayRhythm play={appData.play}\n                            tempo={appData.tempo.value}\n                            volume={appData.volume.value}\n                            mute={appData.mute.value}\n                            noteDict={appData.noteDict}\n                            numStepButtons={item.numStepButtons}\n                            item={item}\n\n        />)\n    }\n}\n\nconst Drumpad = (props) => {\n    const appData = useContext(AppContext);\n\n    return(\n        <>\n            <div className={styles.container}>\n                {appData.selectedRhythm.number !== null ? playItem(appData.selectedRhythm.item, appData) :\n                    appData.selectedRhythm.item.length === appData.rhythmsList.item.length ?\n                        appData.selectedRhythm.item.map((x,i) => {\n                            return playItem(x, appData)\n                        }) : null\n                }\n\n                {appData.samplesList.map((x) => {\n                    return <>\n                        <div className={styles.line} >\n                            <div className={styles.title}>\n                                {x.name}\n                            </div>\n                            <div className={styles.stepButton}>\n                                {appData.selectedRhythm.item !== undefined ?\n                                    <StepButtonsList key={x.id}\n                                                     idInstrument={x.id}\n                                                     instrument={x.name}\n                                                     idRhythm={appData.selectedRhythm.number}\n                                    /> : null}\n                            </div>\n                        </div>\n                    </>\n\n                })}\n\n            </div>\n\n        </>\n\n    );\n}\n\nexport default Drumpad;","import React from \"react\";\nimport \"./Button.css\";\n\nconst STYLES = ['btn--primary', 'btn--secondary', 'btn--primary--active', 'btn--secondary--active'];\n\nconst Button = ({ children, type, onClick, buttonStyle, buttonSize, buttonColor, ...props }) => {\n    //Se è stato definito uno stile del bottone inserisci lo stile altrimenti consideri il primo nell'array (btn primary)\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n\n    //Creo un botton con le proprietà di stile, la proprietà di onClick e type. Children è il testo del bottone\n    return (\n        <button className={`btn ${checkButtonStyle}`} onClick={onClick} type={type} {...props}>\n            {children}\n        </button>\n    );\n};\n\nexport default Button;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport {withStyles} from \"@material-ui/core\";\nimport produce from \"immer\";\n\nconst useStyles = makeStyles({ /*come avere un file VerticalSlider.module.css*/\n    root: {\n        width: \"20%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderColor: \"white\",\n        border: 2\n    },\n    title: {\n        marginBottom: \"0.5rem\",\n        textAlign: \"center\"\n    }\n});\n\nconst CustomSlider = withStyles({\nroot: {\n    color: 'darkred',\n        height: 8,\n        '&$vertical': {\n        width: 8\n    }\n},\nthumb: {\n    height: 20,\n        width: 20,\n        backgroundColor: '#fff',\n        border: '3px solid currentColor',\n        marginTop: -8,\n        marginLeft: -12,\n        '&:focus, &:hover': {\n        boxShadow: '0px 0px 0px 5px rgba(220, 220, 220, 0.16)'\n    },\n    '&$active': {\n        boxShadow: '0px 0px 0px 8px rgba(220, 220, 220, 0.16)'\n    }\n},\nactive: {},\nvalueLabel: {\n    left: 'calc(-50% + 4px)',\n},\ntrack: {\n    height: 8,\n        borderRadius: 4,\n        border: \"2px inset\",\n        borderColor: \"darkred\",\n        borderBottom: \"0\",\n        color: \"black\"\n},\nrail: {\n    height: 8,\n        borderRadius: 4,\n        border: \"2px inset\",\n        borderColor: \"white\",\n        borderBottom: \"0\",\n        color: \"black\",\n},\nvertical: {\n    '& $rail': {\n        width: 8,\n    },\n    '& $track': {\n        width: 8\n    },\n    '& $thumb': {\n        marginLeft: -4.5 ,\n            marginBottom: -11\n    }\n}\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\nconst VerticalSlider = (props) => {\n    const {title, defaultValue, userRhythms, idInstrument, idRhythm} = props;\n    const classes = useStyles();\n    return (\n        <>\n            <div className={classes.root}>\n                <div className={classes.title}>\n                    <Typography id=\"vertical-slider\" gutterBottom>\n                        {title}\n                    </Typography>\n                </div>\n                <div style={{height:\"6rem\"}}>\n                    <CustomSlider\n                        orientation=\"vertical\"\n                        getAriaValueText={valuetext}\n                        defaultValue={defaultValue}\n                        value={userRhythms.data[idRhythm].instruments[idInstrument].volume}\n                        aria-labelledby=\"vertical-slider\"\n                        /*marks={marks}*/\n                        onChange={(e, value) => userRhythms.setData(\n                            produce(userRhythms.data, draft => {\n                                draft[idRhythm].instruments[idInstrument].volume = value;\n                            }))}\n\n                    />\n                </div>\n            </div>\n        </>\n    );\n}\nexport default VerticalSlider\n","export default __webpack_public_path__ + \"static/media/logo.57ea91e3.png\";","import React, {useContext} from 'react';\nimport styles from \"./SettingsSection.module.css\";\nimport {VerticalSlider} from \"../../index\";\nimport {AppContext} from \"../../../context/AppContext\";\nimport logo from \"../../../assets/logo.png\"\n\nconst SlidersContainer = (props) => {\n    const appData = useContext(AppContext)\n\n    let slidersContainer;\n\n    appData.userRhythms.data[appData.selectedRhythm.number] !== undefined &&\n    appData.userRhythms.data[appData.selectedRhythm.number].instruments.length === 8 ?\n        slidersContainer = (<>\n\n\n                    <div className={styles.section}>\n                        {appData.samplesList.filter((vs) => vs.id < 4).map((x) => {\n                            return <>\n                                <VerticalSlider title={x.name}\n                                                defaultValue={appData.userRhythms.data[appData.selectedRhythm.number].instruments[x.id].volume}\n                                                userRhythms={appData.userRhythms}\n                                                idInstrument={x.id}\n                                                idRhythm={appData.selectedRhythm.number}\n                                />\n\n                            </>\n                        })}\n                    </div>\n\n                    <div className={styles.section}>\n                        {appData.samplesList.filter((vs) => vs.id > 3).map((x) => {\n                            return <>\n                                <VerticalSlider title={x.name}\n                                                defaultValue={appData.userRhythms.data[appData.selectedRhythm.number].instruments[x.id].volume}\n                                                userRhythms={appData.userRhythms}\n                                                idInstrument={x.id}\n                                                idRhythm={appData.selectedRhythm.number}\n\n                                />\n                            </>\n                        })}\n                    </div>\n\n            </>\n    ) : slidersContainer = null;\n\n\n    return (\n        <>\n            <div className={styles.slidersContainer} style={appData.selectedRhythm.number === null ? {backgroundImage: `url(${logo})`, backgroundSize: \"contain\", backgroundPosition: \"center\", backgroundRepeat:\"no-repeat\"} : null} >\n                {slidersContainer}\n            </div>\n        </>\n    );\n}\n\nexport default SlidersContainer;","import React, {useContext, useState} from 'react';\nimport styles from \"./SettingsSection.module.css\";\nimport {Dropdown, HorizontalSlider, NumberControl, Button, ButtonsList, Popup, InstructionPopup, DetailsPopup} from \"../../index\";\nimport {\n    HiVolumeUp,\n    HiVolumeOff,\n    BsQuestionSquareFill,\n} from \"react-icons/all\";\nimport {AppContext} from \"../../../context/AppContext\";\nimport SlidersContainer from \"./SlidersContainer\";\n\n\n\nconst SettingsSection = (props) => {\n    const appData = useContext(AppContext);\n    const [open, setOpen] = useState(false);\n    const [open2, setOpen2] = useState(false);\n\n    return (\n        <>\n            <div className={styles.container}>\n                <div style={{\n                    width: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"flex-start\",\n                    justifyContent: \"flex-start\",\n                    marginLeft: \"-1.4rem\"\n                }}>\n                    <Button onClick={() => setOpen(!open)} buttonStyle={\"btn--secondary\"} style={{marginRight: \"0.5rem\"}}><BsQuestionSquareFill size={20}/></Button>\n                    <HorizontalSlider title={\"Volume\"} defaultValue={50}\n                                      icon={!appData.mute.value ? <HiVolumeUp size={24} /> : <HiVolumeOff size={24} />}\n                                      volumeValue={appData.volume.value}\n                                      onChangeValue={appData.volume.setValue}\n                                      mute={appData.mute.value}\n                                      onChangeMute={appData.mute.setValue}/>\n\n                </div>\n\n                <ButtonsList/>\n\n                <div className={styles.divider}></div>\n\n                <div className={styles.auxButtons}>\n                    {/*<Button onClick={() => setOpen(!open)} buttonStyle={\"btn--secondary\"}><BsQuestionSquareFill size={20}/></Button>*/}\n\n                    <NumberControl tempo={appData.tempo} play={appData.play}/>\n                    <Button onClick={() => setOpen2(!open2)} buttonStyle={\"btn--secondary\"}><BsQuestionSquareFill size={20}/></Button>\n                    <Dropdown/>\n\n                </div>\n                {\n                    open ? <Popup title={appData.popupsList[0].title} body={<InstructionPopup/>} open={open} onChangeOpen={setOpen}/> : null\n                }\n\n                {\n                    open2 ? <Popup title={appData.popupsList[1].title} body={<DetailsPopup/>} open={open2} onChangeOpen={setOpen2}/> : null\n                }\n                <SlidersContainer />\n            </div>\n        </>\n    );\n}\n\nexport default SettingsSection;","import React, {useContext} from 'react';\nimport styles from \"./RhythmSection.module.css\";\nimport {CheckBox, Drumpad, Display} from \"../../index\";\nimport {AppContext} from \"../../../context/AppContext\";\n\nconst RhythmSection = (props) => {\n    const appData = useContext(AppContext);\n    return (\n        <>\n            <div className={styles.container} style={appData.selectedRhythm.number == null ? {justifyContent: \"center\"} : {justifyContent: \"space-between\"}}>\n                    <Display/>\n\n                <div className={styles.drumpad} style={appData.selectedRhythm.number == null ? {display: \"none\"} : {display: \"\"}}> {/*Se ha selezionato tutto mostra solo display*/}\n                    <Drumpad />\n                </div>\n\n            </div>\n        </>\n    );\n}\n\nexport default RhythmSection;","import React, {useContext, useEffect} from 'react';\nimport {StepButton} from \"../../../index\";\nimport {AppContext} from \"../../../../context/AppContext\";\nimport produce from \"immer\";\n\nconst StepButtonsList = (props) => {\n    const {idInstrument, instrument, idRhythm} = props;\n    const appData = useContext(AppContext)\n\n    let array = [];\n\n    if(appData.selectedRhythm.item.instruments !== undefined){\n        for (let i = 0; i < appData.selectedRhythm.item.numStepButtons ; i++) {\n            array.push(<StepButton id={i}\n                                   instrument={instrument}\n                                   idInstrument={idInstrument}\n                                   idRhythm={idRhythm}\n                                   userRhythms={appData.userRhythms}\n                                   active={appData.selectedRhythm.item.instruments[idInstrument].pad[i]}\n            />);\n        }\n    }\n\n\n    return array;\n\n}\n\nexport default StepButtonsList;","import React, {useContext, useState} from 'react';\nimport {BiSelectMultiple, BsQuestionSquareFill, FaMinus, FaPause, FaPlay, FaPlus, FaStop} from \"react-icons/all\";\nimport {Button, Popup} from \"../../index\";\nimport styles from \"./SettingsSection.module.css\";\nimport {AppContext} from \"../../../context/AppContext\";\nimport produce from \"immer\";\n\nconst ButtonsList = (props) => {\n    const [open, setOpen] = useState(false);\n    const appData = useContext(AppContext);\n\n    return (\n        <>\n\n            <div className={styles.playButtons}>\n                <Button onClick={() => {\n                    appData.play.setValue(!appData.play.value);\n                    /*if(appData.play.load){\n                        appData.play.setLoad(false);\n                    }*/\n                }} >{appData.play.value ?<FaPause/> : <FaPlay/>} </Button>\n            </div>\n\n            <div className={styles.rhythmButtonsSection} >\n\n                <div className={styles.rhythmButtonsControls}>\n                    {/*<Button onClick={() => setOpen(!open)} buttonStyle={\"btn--secondary\"} style={{marginRight: \"1rem\"}}><BsQuestionSquareFill size={20}/></Button>*/}\n                    <Button buttonStyle={appData.selectedRhythm.number == null ?\n                        'btn--primary--active' : 'btn--primary'}\n                            onClick={() => appData.selectedRhythm.setNumber(null)}>\n\n                        All <BiSelectMultiple size={20}/>\n                    </Button>\n                    <Button onClick={() => appData.rhythmsList.setItem(appData.rhythmsList.item.concat(appData.rhythmsList.item.length))}> <FaPlus/> </Button>\n\n                    <Button onClick={() => {\n                        appData.rhythmsList.setItem(produce(appData.rhythmsList.item, draft => {\n                            draft.splice(appData.rhythmsList.item.length-1)\n                        }))\n                        if(appData.userRhythms.data[appData.rhythmsList.item.length-1] !== undefined) {\n                            appData.userRhythms.setData(produce(appData.userRhythms.data, draft => {\n                                draft.splice(appData.rhythmsList.item.length-1)\n                            }))\n                        }\n\n                    }}> <FaMinus/> </Button>\n                </div>\n                <div className={styles.rhythmButtonsList} style={appData.rhythmsList.item.length > 5 ? {overflowY: \"scroll\"} : {overflow:\"hidden\"}} >\n                    {appData.rhythmsList.item.map((x) => {\n                        return <Button buttonStyle={appData.selectedRhythm.number === x ? 'btn--primary--active' : 'btn--primary'} onClick={() => appData.selectedRhythm.setNumber(x)}>{x+1}</Button>\n                    })}\n                </div>\n                {/*{\n                    open ? <Popup title={appData.popupsList[0].title} body={appData.popupsList[0].body} open={open} onChangeOpen={setOpen}/> : null\n                }*/}\n            </div>\n        </>\n    );\n}\n\nexport default ButtonsList;","import React, {useState} from 'react';\nimport {Instrument, Song, Track} from \"reactronica\";\nimport {useSteps} from \"../../hooks\";\nimport {CgUsb} from \"react-icons/all\";\nimport {CustomInstrument} from \"../index\";\n\nconst PlayRhythm = (props) => {\n\n    const {play, tempo, volume, mute, item, noteDict, numStepButtons} = props;\n    const [steps, setSteps] = useSteps(item, numStepButtons);\n    let bpm = tempo * (item.denominator/4);\n    let newVolume = volume/10\n    return (\n\n        <>\n            <Song isPlaying={play.value } bpm={bpm} volume={newVolume}\n                  isMuted={mute || volume === 0}>\n                {steps.map((x, i) => {\n                    return (<Track\n                        volume={item.instruments[i].volume/10} /*divido per 25 altrimenti gracchia troppo*/\n                        mute={item.instruments[i].volume === 0 || mute}\n                        steps={x}\n\n                    >\n                        {/*<Instrument\n                            type=\"sampler\"\n                            samples={noteDict[0]}\n                            /*onLoad={(buffers) => {\n                                play.setLoad(true)\n                            }}\n                        />\n*/}\n                        <CustomInstrument samples={noteDict[0]} />\n                    </Track>)\n                })}\n\n            </Song>\n        </>\n    );\n}\n\nexport default PlayRhythm;","import React from 'react';\nimport styles from \"./Popup.module.css\"\nimport {AiOutlineCloseSquare, GrClose} from \"react-icons/all\";\n\nfunction Popup(props) {\n    const {title, body, open, onChangeOpen} = props;\n    return (\n        <>\n            <div>\n                <div className={styles.overlay}>\n                 <div className={styles.container}>\n                     <div className={styles.closeSection}>\n                         <span className={styles.closeButton} onClick={() => onChangeOpen(!open)}><GrClose size={20}/></span>\n                     </div>\n\n                    <div className={styles.titleContainer}>\n                        <div className={styles.title}>{title}</div>\n                    </div>\n                     <div className={styles.divider}/>\n                    <div className={styles.body}>\n                        <p>{body}</p>\n                    </div>\n                </div>\n\n                </div>\n            </div>\n        </>\n    );  \n}\n\nexport default Popup;","import React, {useContext, useEffect} from 'react';\nimport {AppContext} from \"../../../../context/AppContext\";\nimport styles from \"./Display.module.css\";\nimport {useIndices} from \"../../../../hooks\";\n\nconst FinalInstrumentsRhythm = (props) => {\n    const appData = useContext(AppContext);\n    const [indices, setIndices] = useIndices();\n    let minute = 60000;\n    let seconds = minute/appData.tempo.value - appData.tempo.value/2.5;\n    if(seconds > 120 && seconds <= 150){\n        seconds = minute/appData.tempo.value - appData.tempo.value/2.7;\n    }\n    if(seconds > 150){\n        seconds = minute/appData.tempo.value - appData.tempo.value/3;\n    }\n\n    useEffect(() => { /*Funzione per evidenziare l'index suonato*/\n        if(appData.play.value){\n            const interval = setInterval(() => {\n                if(appData.play.index < indices.length-1){\n                    appData.play.setIndex(appData.play.index + 1);\n                }\n                else{\n                    appData.play.setIndex(0);\n                }\n            }, seconds);\n            return () => clearInterval(interval);\n        }\n        else {\n            appData.play.setIndex(0)\n        }\n    }, [appData.play.value, appData.play.index]);\n\n    /*disegna, assieme a draqFinalRhythm, la colonna del\n     ritmo finale indicando quali strumenti vengono suonati per ogni indice*/\n    const controlPad = (index, db) => {\n        let array = [];\n        for (let i = 0; i < db.length; i++){\n            if(db[i] !== undefined) {\n                let padIndex = index % db[i].numStepButtons;\n                for (let y = 0; y < db[i].instruments.length; y++){\n                    if(db[i].instruments[y].pad[padIndex]){\n                        array[y] = true;\n                    }\n                }\n            }\n\n        }\n        return array;\n    }\n\n    const drawFinalRhythm = (index, db, instruments) => {\n        let pads = controlPad(index, db);\n        let draw = []\n        for (let i = 0; i < instruments.length; i++){\n            if(pads[i]){\n                draw.push(<div className={appData.selectedRhythm.number != null ? styles.box : styles.allDisplayBox}><div className={styles.toggleActive}> </div></div>)\n            } else {\n                draw.push(<div className={appData.selectedRhythm.number != null ? styles.box : styles.allDisplayBox}><div className={styles.toggle}> </div></div>)\n            }\n        }\n        return draw;\n    }\n\n\n    return (\n        <>\n            <div className={styles.columnTitles}>\n                {appData.samplesList.map((x) => {\n                    return <>\n                        <div className={styles.title} style={appData.selectedRhythm.number == null ? {height: \"3rem\"} : null}>\n                            {x.name}\n                        </div>\n                    </>\n                })}\n            </div>\n            <div className={styles.tab}>\n            {\n                indices.map((x, i) => {\n                    return (\n                        <div className={styles.columnSteps} style={appData.play.index === i ? {background: \"transparent\", border: \"2px solid #b388ff\", color: \"white\"} : null} >\n                            <div className={appData.selectedRhythm.number != null ? styles.box : styles.allDisplayBox}>{x}</div>\n                            {drawFinalRhythm(i, appData.userRhythms.data, appData.samplesList)}\n                        </div>\n                    )\n                })\n            }\n            </div>\n        </>\n    );\n}\n\nexport default FinalInstrumentsRhythm;","import React, {useContext} from 'react';\nimport styles from \"./Display.module.css\";\nimport {AppContext} from \"../../../../context/AppContext\";\nimport FinalInstrumentsRhythm from \"./FinalInstrumentsRhythm\";\n\nconst Display = (props) => {\n    const appData = useContext(AppContext)\n\n    return (\n        <>\n            <div className={styles.display} style={appData.selectedRhythm.number == null ? {height: \"30rem\"} : { height: \"21rem\"}}>\n                <div className={styles.container}>\n                       <FinalInstrumentsRhythm/>\n                </div>\n            </div>\n\n        </>\n    );\n}\n\nexport default Display;","import React from 'react';\nimport {Button} from \"../index\";\nimport {BiHash, BiSelectMultiple, FaMinus, FaPlay, FaPlus} from \"react-icons/all\";\n\nconst InstructionPopup = (props) => {\n    return (<>\n        <div>\n            <div style={{display: \"flex\", height: \"3rem\", alignItems:\"center\"}}>\n                <Button ><FaPlay/></Button>\n                <div style={{marginLeft: \"1rem\"}}>Play/Pause button</div>\n            </div>\n            <div style={{display: \"flex\", height: \"3rem\", alignItems:\"center\"}}>\n                <Button> All <BiSelectMultiple size={20}/></Button>\n                <div style={{marginLeft: \"1rem\"}}>button to display and play all rhythms together</div>\n            </div>\n            <div style={{display: \"flex\", height: \"3rem\", alignItems:\"center\"}}>\n                <Button><FaPlus/></Button>\n                <div style={{marginLeft: \"1rem\"}}>button to add a rhythm</div>\n            </div>\n            <div style={{display: \"flex\", height: \"3rem\", alignItems:\"center\"}}>\n                <Button><FaMinus/></Button>\n                <div style={{marginLeft: \"1rem\"}}>button to delete the last rhythm</div>\n            </div>\n            <div style={{display: \"flex\", height: \"3rem\", alignItems:\"center\"}}>\n                <Button><BiHash/></Button>\n                <div style={{marginLeft: \"1rem\"}}>button to select a specific rhythm</div>\n            </div>\n            <br/>\n            On the right the PolyDrum is so divided:\n            <ul>\n                <li>On top: <b>display, to see the final rhythm</b></li>\n                <li>On bottom: <b>pad, to custom your rhythms</b></li>\n            </ul>\n        </div>\n    </>);\n}\n\nexport default InstructionPopup;","import React from 'react';\n\nconst DetailsPopup = () => {\n    return <>\n        <div>\n            Time signature is defined in the following way:\n            <ul>\n                <li><b>m/n</b> --> m beats, each an n-th of the whole note (first)</li>\n                <li><b>i/j</b> --> i beats, each an j-th of the whole note (second)</li>\n            </ul>\n\n            <ul>\n                <li>The first rhythm fits a measure of m beats, each lasting 1/n of a whole note</li>\n                <li>The second rhythm fits a measure of i beats, each lasting 1/j of a whole note</li>\n            </ul>\n            A complex rhythm is indicated as <b>m/n : i/j</b><br/>\n            To find a single signature that accommodates both sub-signatures of a polymetric structure:\n            <ul>\n                <li>N<sub>i</sub> / D<sub>i</sub> --> i rhythm</li>\n                <li>N<sub>1</sub> / D<sub>1</sub> : N<sub>2</sub> / D<sub>2</sub> --> N / D</li><br/>\n                Where, in the general case:\n                <ul>\n                    <li>D = lcm (D<sub>1</sub>, D<sub>2</sub>)</li>\n                    <li>N = lcm (N<sub>1</sub>K<sub>1</sub>, N<sub>2</sub>K<sub>2</sub>)</li>\n                    <li> K<sub>i</sub> = D / D<sub>i</sub></li>\n                </ul>\n            </ul>\n            <b>In this implementation n = j, meaning that the PolyDrum is polymetric.\n            D is a fixed value equal to 4.</b>\n        </div>\n    </>\n}\n\nexport default DetailsPopup;","import React from 'react';\nimport {Instrument} from \"reactronica\";\n\nconst CustomInstrument = React.memo(props => {\n        const {samples} = props;\n        console.log(\"PIPPO\")\n\n        return (\n            <>\n                <Instrument\n                    type=\"sampler\"\n                    samples={samples}\n                    /*onLoad={(buffers) => {\n                        play.setLoad(true)\n                    }}*/\n                />\n\n            </>\n        );\n    }\n)\n\nexport default CustomInstrument;","import React, {useContext} from 'react';\nimport styles from \"./Drumbit.module.css\";\nimport {\n    SettingsSection, RhythmSection\n} from \"../components\";\n\nfunction Drumbit() {\n\n    return (\n        <div className={styles.container}>\n            <SettingsSection />\n            <RhythmSection/>\n        </div>\n\n    );\n}\n\nexport default Drumbit;","import './App.css';\nimport {Drumbit} from \"./view\";\nimport { AppContext, useAppContext } from \"./context/AppContext\";\n\nfunction App() {\n    const appData = useAppContext();\n  return (\n    <>\n        <AppContext.Provider value={appData}>\n            <Drumbit/>\n        </AppContext.Provider>\n{/*\n        {console.log(\"-----------\\nplay è: \", appData.play.value)}\n        {console.log(\"ho cambiato la VELOCITA' in: \", appData.tempo.value)}\n        {console.log(\"ho cambiato il VOLUME in: \", appData.volume.value, \"\\n-------------\\n\")}\n\n        {console.log(\"Il ritmo selezionato è :\", appData.selectedRhythm.number)}\n        {console.log(\"il JSON del ritmo è: \", appData.selectedRhythm.item)}*/}\n        {console.log(\"I RITMI DELL'UTENTE SONO: \", appData.userRhythms.data)}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Display_display__pBf13\",\"container\":\"Display_container__1Ut_9\",\"title\":\"Display_title__3g1cv\",\"columnTitles\":\"Display_columnTitles__1RL-N\",\"tab\":\"Display_tab__-vEYo\",\"columnSteps\":\"Display_columnSteps__24mBq\",\"box\":\"Display_box__211Qx\",\"allDisplayBox\":\"Display_allDisplayBox__1Yg81\",\"toggle\":\"Display_toggle__3PNd3\",\"toggleActive\":\"Display_toggleActive__3xJsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SettingsSection_container__1hMaU\",\"divider\":\"SettingsSection_divider__3mBhh\",\"slidersContainer\":\"SettingsSection_slidersContainer__yePbD\",\"section\":\"SettingsSection_section__2FB09\",\"rhythmButtonsSection\":\"SettingsSection_rhythmButtonsSection__3NFB0\",\"rhythmButtonsControls\":\"SettingsSection_rhythmButtonsControls__32ifS\",\"rhythmButtonsList\":\"SettingsSection_rhythmButtonsList__6pOl2\",\"playButtons\":\"SettingsSection_playButtons__32TXZ\",\"auxButtons\":\"SettingsSection_auxButtons__fhlHf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Popup_overlay__2z1tN\",\"container\":\"Popup_container__3c3g9\",\"titleContainer\":\"Popup_titleContainer__1pOzD\",\"title\":\"Popup_title__1Xsgh\",\"body\":\"Popup_body__3N2bX\",\"closeSection\":\"Popup_closeSection__VeM8H\",\"closeButton\":\"Popup_closeButton__MlIK3\",\"divider\":\"Popup_divider__16qkM\",\"popup\":\"Popup_popup__3TSql\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown_dropdown__fVfEx\",\"button\":\"Dropdown_button__24a8T\",\"content\":\"Dropdown_content__1bUId\",\"item\":\"Dropdown_item__13Fku\",\"dropLabel\":\"Dropdown_dropLabel__2H6V8\",\"activeDrop\":\"Dropdown_activeDrop__2PwVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Drumpad_container__gC20J\",\"line\":\"Drumpad_line__3HGGJ\",\"stepButton\":\"Drumpad_stepButton__16HAN\",\"title\":\"Drumpad_title__1CauR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SampleLine_container__3pcsi\",\"name\":\"SampleLine_name__grDN6\",\"line\":\"SampleLine_line__HS9yz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StepButton_container__2GycN\",\"active\":\"StepButton_active__1JLP4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RhythmSection_container__3KHx6\",\"drumpad\":\"RhythmSection_drumpad__3__E-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Drumbit_container__1dNss\"};"],"sourceRoot":""}